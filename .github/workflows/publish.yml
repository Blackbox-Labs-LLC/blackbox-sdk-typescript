name: Publish to npm

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'

      - name: Set up Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build
        run: bun run build

      - name: Determine publish eligibility
        id: pkg
        run: |
          node -e 'const fs=require("fs"); const p=require("./package.json"); fs.appendFileSync(process.env.GITHUB_OUTPUT, "is_private="+(p.private?"true":"false")+"\n"+"package_name="+p.name+"\n"+"package_version="+p.version+"\n");'

      - name: Check if version already published
        id: check
        if: steps.pkg.outputs.is_private != 'true'
        run: |
          PKG=${{ steps.pkg.outputs.package_name }}
          VER=${{ steps.pkg.outputs.package_version }}
          echo "Checking if $PKG@$VER exists on npm"
          if npm view "$PKG" versions --json | grep -q '"'"$VER"'"'; then
            echo "already_published=true" >> $GITHUB_OUTPUT
          else
            echo "already_published=false" >> $GITHUB_OUTPUT
          fi

      - name: Configure npm auth
        if: steps.pkg.outputs.is_private != 'true' && steps.check.outputs.already_published != 'true'
        run: |
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish
        if: steps.pkg.outputs.is_private != 'true' && steps.check.outputs.already_published != 'true'
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        if: steps.pkg.outputs.is_private != 'true' && steps.check.outputs.already_published != 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.pkg.outputs.package_version }}
          name: v${{ steps.pkg.outputs.package_version }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


