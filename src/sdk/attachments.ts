/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { attachmentsDelete } from "../funcs/attachmentsDelete.js";
import { attachmentsDownload } from "../funcs/attachmentsDownload.js";
import { attachmentsGetStats } from "../funcs/attachmentsGetStats.js";
import { attachmentsList } from "../funcs/attachmentsList.js";
import { attachmentsUpload } from "../funcs/attachmentsUpload.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Attachments extends ClientSDK {
  async getStats(
    options?: RequestOptions,
  ): Promise<models.ApiResponseValue> {
    return unwrapAsync(attachmentsGetStats(
      this,
      options,
    ));
  }

  async download(
    request: operations.DownloadAttachmentRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(attachmentsDownload(
      this,
      request,
      options,
    ));
  }

  async list(
    request: operations.ListMessageAttachmentsRequest,
    options?: RequestOptions,
  ): Promise<models.ApiResponseVecAttachmentResponse> {
    return unwrapAsync(attachmentsList(
      this,
      request,
      options,
    ));
  }

  async upload(
    request: operations.UploadAttachmentsRequest,
    options?: RequestOptions,
  ): Promise<models.ApiResponseUploadResponse> {
    return unwrapAsync(attachmentsUpload(
      this,
      request,
      options,
    ));
  }

  async delete(
    request: operations.DeleteAttachmentRequest,
    options?: RequestOptions,
  ): Promise<models.ApiResponseString> {
    return unwrapAsync(attachmentsDelete(
      this,
      request,
      options,
    ));
  }
}
