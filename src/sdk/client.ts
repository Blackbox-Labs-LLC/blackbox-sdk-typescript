/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { clientGetUserTickets } from "../funcs/clientGetUserTickets.js";
import { clientIdentifyUser } from "../funcs/clientIdentifyUser.js";
import { clientSendMessage } from "../funcs/clientSendMessage.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Client extends ClientSDK {
  async identifyUser(
    request: models.ClientIdentifyRequest,
    options?: RequestOptions,
  ): Promise<models.ApiResponseClientUserResponse> {
    return unwrapAsync(clientIdentifyUser(
      this,
      request,
      options,
    ));
  }

  async sendMessage(
    request: models.ClientMessageRequest,
    options?: RequestOptions,
  ): Promise<models.ApiResponseClientTicketResponse> {
    return unwrapAsync(clientSendMessage(
      this,
      request,
      options,
    ));
  }

  async getUserTickets(
    request: operations.GetUserTicketsRequest,
    options?: RequestOptions,
  ): Promise<models.ApiResponseVecClientTicketResponse> {
    return unwrapAsync(clientGetUserTickets(
      this,
      request,
      options,
    ));
  }
}
