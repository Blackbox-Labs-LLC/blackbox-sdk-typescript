/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { csatSurveysDelete } from "../funcs/csatSurveysDelete.js";
import { csatSurveysExport } from "../funcs/csatSurveysExport.js";
import { csatSurveysGet } from "../funcs/csatSurveysGet.js";
import { csatSurveysGetAnalytics } from "../funcs/csatSurveysGetAnalytics.js";
import { csatSurveysList } from "../funcs/csatSurveysList.js";
import { csatSurveysSubmit } from "../funcs/csatSurveysSubmit.js";
import { csatSurveysUpdate } from "../funcs/csatSurveysUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class CsatSurveys extends ClientSDK {
  /**
   * List tickets with filtering
   *
   * @remarks
   * Retrieves a paginated list of tickets with optional filtering by status, priority, assignment, creator, and tags. Results are ordered by creation date (newest first).
   */
  async list(
    request: operations.ListSurveysRequest,
    options?: RequestOptions,
  ): Promise<models.ApiResponseVecSurveyResponse> {
    return unwrapAsync(csatSurveysList(
      this,
      request,
      options,
    ));
  }

  async submit(
    request: operations.SubmitSurveyRequest,
    options?: RequestOptions,
  ): Promise<models.ApiResponseSurveyResponse> {
    return unwrapAsync(csatSurveysSubmit(
      this,
      request,
      options,
    ));
  }

  async getAnalytics(
    request: operations.GetSurveyAnalyticsRequest,
    options?: RequestOptions,
  ): Promise<models.ApiResponseCSATAnalytics> {
    return unwrapAsync(csatSurveysGetAnalytics(
      this,
      request,
      options,
    ));
  }

  async export(
    request: operations.ExportSurveysRequest,
    options?: RequestOptions,
  ): Promise<models.ApiResponseSurveyExport> {
    return unwrapAsync(csatSurveysExport(
      this,
      request,
      options,
    ));
  }

  /**
   * Get ticket details
   *
   * @remarks
   * Retrieves detailed information about a specific ticket including its current status, assignment, tags, and metadata.
   */
  async get(
    request: operations.GetSurveyRequest,
    options?: RequestOptions,
  ): Promise<models.ApiResponseSurveyResponse> {
    return unwrapAsync(csatSurveysGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Update a tag
   *
   * @remarks
   * Requires permission: MANAGE_TAGS
   */
  async update(
    request: operations.UpdateSurveyRequest,
    options?: RequestOptions,
  ): Promise<models.ApiResponseSurveyResponse> {
    return unwrapAsync(csatSurveysUpdate(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete a tag
   *
   * @remarks
   * Requires permission: MANAGE_TAGS
   */
  async delete(
    request: operations.DeleteSurveyRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(csatSurveysDelete(
      this,
      request,
      options,
    ));
  }
}
