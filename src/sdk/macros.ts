/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { macrosCreate } from "../funcs/macrosCreate.js";
import { macrosDelete } from "../funcs/macrosDelete.js";
import { macrosGet } from "../funcs/macrosGet.js";
import { macrosGetPopular } from "../funcs/macrosGetPopular.js";
import { macrosList } from "../funcs/macrosList.js";
import { macrosRender } from "../funcs/macrosRender.js";
import { macrosUpdate } from "../funcs/macrosUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Macros extends ClientSDK {
  /**
   * List tickets with filtering
   *
   * @remarks
   * Retrieves a paginated list of tickets with optional filtering by status, priority, assignment, creator, and tags. Results are ordered by creation date (newest first).
   */
  async list(
    request: operations.ListMacrosRequest,
    options?: RequestOptions,
  ): Promise<models.ApiResponseVecMacroResponse> {
    return unwrapAsync(macrosList(
      this,
      request,
      options,
    ));
  }

  /**
   * Create a new support ticket
   *
   * @remarks
   * Creates a new support ticket in the specified organization. The ticket will be assigned to the authenticated user as the creator and can optionally be assigned to another team member.
   */
  async create(
    request: operations.CreateMacroRequest,
    options?: RequestOptions,
  ): Promise<models.ApiResponseMacroResponse> {
    return unwrapAsync(macrosCreate(
      this,
      request,
      options,
    ));
  }

  async getPopular(
    request: operations.GetPopularMacrosRequest,
    options?: RequestOptions,
  ): Promise<models.ApiResponseVecMacroResponse> {
    return unwrapAsync(macrosGetPopular(
      this,
      request,
      options,
    ));
  }

  async render(
    request: operations.RenderMacroTemplateRequest,
    options?: RequestOptions,
  ): Promise<models.ApiResponseMacroTemplateResponse> {
    return unwrapAsync(macrosRender(
      this,
      request,
      options,
    ));
  }

  /**
   * Get ticket details
   *
   * @remarks
   * Retrieves detailed information about a specific ticket including its current status, assignment, tags, and metadata.
   */
  async get(
    request: operations.GetMacroRequest,
    options?: RequestOptions,
  ): Promise<models.ApiResponseMacroResponse> {
    return unwrapAsync(macrosGet(
      this,
      request,
      options,
    ));
  }

  async update(
    request: operations.UpdateMacroRequest,
    options?: RequestOptions,
  ): Promise<models.ApiResponseMacroResponse> {
    return unwrapAsync(macrosUpdate(
      this,
      request,
      options,
    ));
  }

  async delete(
    request: operations.DeleteMacroRequest,
    options?: RequestOptions,
  ): Promise<models.ApiResponseString> {
    return unwrapAsync(macrosDelete(
      this,
      request,
      options,
    ));
  }
}
