/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type MacroUsage = {
  macroId: string;
  name: string;
  usageCount: number;
};

/** @internal */
export const MacroUsage$inboundSchema: z.ZodType<
  MacroUsage,
  z.ZodTypeDef,
  unknown
> = z.object({
  macro_id: z.string(),
  name: z.string(),
  usage_count: z.number().int(),
}).transform((v) => {
  return remap$(v, {
    "macro_id": "macroId",
    "usage_count": "usageCount",
  });
});

/** @internal */
export type MacroUsage$Outbound = {
  macro_id: string;
  name: string;
  usage_count: number;
};

/** @internal */
export const MacroUsage$outboundSchema: z.ZodType<
  MacroUsage$Outbound,
  z.ZodTypeDef,
  MacroUsage
> = z.object({
  macroId: z.string(),
  name: z.string(),
  usageCount: z.number().int(),
}).transform((v) => {
  return remap$(v, {
    macroId: "macro_id",
    usageCount: "usage_count",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MacroUsage$ {
  /** @deprecated use `MacroUsage$inboundSchema` instead. */
  export const inboundSchema = MacroUsage$inboundSchema;
  /** @deprecated use `MacroUsage$outboundSchema` instead. */
  export const outboundSchema = MacroUsage$outboundSchema;
  /** @deprecated use `MacroUsage$Outbound` instead. */
  export type Outbound = MacroUsage$Outbound;
}

export function macroUsageToJSON(macroUsage: MacroUsage): string {
  return JSON.stringify(MacroUsage$outboundSchema.parse(macroUsage));
}

export function macroUsageFromJSON(
  jsonString: string,
): SafeParseResult<MacroUsage, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => MacroUsage$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'MacroUsage' from JSON`,
  );
}
