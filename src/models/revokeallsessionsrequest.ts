/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type RevokeAllSessionsRequest = {
  keepCurrent: boolean;
};

/** @internal */
export const RevokeAllSessionsRequest$inboundSchema: z.ZodType<
  RevokeAllSessionsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  keep_current: z.boolean(),
}).transform((v) => {
  return remap$(v, {
    "keep_current": "keepCurrent",
  });
});

/** @internal */
export type RevokeAllSessionsRequest$Outbound = {
  keep_current: boolean;
};

/** @internal */
export const RevokeAllSessionsRequest$outboundSchema: z.ZodType<
  RevokeAllSessionsRequest$Outbound,
  z.ZodTypeDef,
  RevokeAllSessionsRequest
> = z.object({
  keepCurrent: z.boolean(),
}).transform((v) => {
  return remap$(v, {
    keepCurrent: "keep_current",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RevokeAllSessionsRequest$ {
  /** @deprecated use `RevokeAllSessionsRequest$inboundSchema` instead. */
  export const inboundSchema = RevokeAllSessionsRequest$inboundSchema;
  /** @deprecated use `RevokeAllSessionsRequest$outboundSchema` instead. */
  export const outboundSchema = RevokeAllSessionsRequest$outboundSchema;
  /** @deprecated use `RevokeAllSessionsRequest$Outbound` instead. */
  export type Outbound = RevokeAllSessionsRequest$Outbound;
}

export function revokeAllSessionsRequestToJSON(
  revokeAllSessionsRequest: RevokeAllSessionsRequest,
): string {
  return JSON.stringify(
    RevokeAllSessionsRequest$outboundSchema.parse(revokeAllSessionsRequest),
  );
}

export function revokeAllSessionsRequestFromJSON(
  jsonString: string,
): SafeParseResult<RevokeAllSessionsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RevokeAllSessionsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RevokeAllSessionsRequest' from JSON`,
  );
}
