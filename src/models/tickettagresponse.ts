/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type TicketTagResponse = {
  color: string;
  id: string;
  name: string;
};

/** @internal */
export const TicketTagResponse$inboundSchema: z.ZodType<
  TicketTagResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  color: z.string(),
  id: z.string(),
  name: z.string(),
});

/** @internal */
export type TicketTagResponse$Outbound = {
  color: string;
  id: string;
  name: string;
};

/** @internal */
export const TicketTagResponse$outboundSchema: z.ZodType<
  TicketTagResponse$Outbound,
  z.ZodTypeDef,
  TicketTagResponse
> = z.object({
  color: z.string(),
  id: z.string(),
  name: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TicketTagResponse$ {
  /** @deprecated use `TicketTagResponse$inboundSchema` instead. */
  export const inboundSchema = TicketTagResponse$inboundSchema;
  /** @deprecated use `TicketTagResponse$outboundSchema` instead. */
  export const outboundSchema = TicketTagResponse$outboundSchema;
  /** @deprecated use `TicketTagResponse$Outbound` instead. */
  export type Outbound = TicketTagResponse$Outbound;
}

export function ticketTagResponseToJSON(
  ticketTagResponse: TicketTagResponse,
): string {
  return JSON.stringify(
    TicketTagResponse$outboundSchema.parse(ticketTagResponse),
  );
}

export function ticketTagResponseFromJSON(
  jsonString: string,
): SafeParseResult<TicketTagResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => TicketTagResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'TicketTagResponse' from JSON`,
  );
}
