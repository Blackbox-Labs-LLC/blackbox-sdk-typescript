/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type ApiResponseValue = {
  data?: any | undefined;
  message?: string | null | undefined;
  success: boolean;
};

/** @internal */
export const ApiResponseValue$inboundSchema: z.ZodType<
  ApiResponseValue,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.any().optional(),
  message: z.nullable(z.string()).optional(),
  success: z.boolean(),
});

/** @internal */
export type ApiResponseValue$Outbound = {
  data?: any | undefined;
  message?: string | null | undefined;
  success: boolean;
};

/** @internal */
export const ApiResponseValue$outboundSchema: z.ZodType<
  ApiResponseValue$Outbound,
  z.ZodTypeDef,
  ApiResponseValue
> = z.object({
  data: z.any().optional(),
  message: z.nullable(z.string()).optional(),
  success: z.boolean(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ApiResponseValue$ {
  /** @deprecated use `ApiResponseValue$inboundSchema` instead. */
  export const inboundSchema = ApiResponseValue$inboundSchema;
  /** @deprecated use `ApiResponseValue$outboundSchema` instead. */
  export const outboundSchema = ApiResponseValue$outboundSchema;
  /** @deprecated use `ApiResponseValue$Outbound` instead. */
  export type Outbound = ApiResponseValue$Outbound;
}

export function apiResponseValueToJSON(
  apiResponseValue: ApiResponseValue,
): string {
  return JSON.stringify(
    ApiResponseValue$outboundSchema.parse(apiResponseValue),
  );
}

export function apiResponseValueFromJSON(
  jsonString: string,
): SafeParseResult<ApiResponseValue, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ApiResponseValue$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ApiResponseValue' from JSON`,
  );
}
