/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type ApiResponseCreateApiKeyResponseData = {
  createdAt: string;
  expiresAt?: string | null | undefined;
  id: string;
  key: string;
  name: string;
  scopes: Array<string>;
};

export type ApiResponseCreateApiKeyResponse = {
  data?: ApiResponseCreateApiKeyResponseData | undefined;
  message?: string | null | undefined;
  success: boolean;
};

/** @internal */
export const ApiResponseCreateApiKeyResponseData$inboundSchema: z.ZodType<
  ApiResponseCreateApiKeyResponseData,
  z.ZodTypeDef,
  unknown
> = z.object({
  created_at: z.string(),
  expires_at: z.nullable(z.string()).optional(),
  id: z.string(),
  key: z.string(),
  name: z.string(),
  scopes: z.array(z.string()),
}).transform((v) => {
  return remap$(v, {
    "created_at": "createdAt",
    "expires_at": "expiresAt",
  });
});

/** @internal */
export type ApiResponseCreateApiKeyResponseData$Outbound = {
  created_at: string;
  expires_at?: string | null | undefined;
  id: string;
  key: string;
  name: string;
  scopes: Array<string>;
};

/** @internal */
export const ApiResponseCreateApiKeyResponseData$outboundSchema: z.ZodType<
  ApiResponseCreateApiKeyResponseData$Outbound,
  z.ZodTypeDef,
  ApiResponseCreateApiKeyResponseData
> = z.object({
  createdAt: z.string(),
  expiresAt: z.nullable(z.string()).optional(),
  id: z.string(),
  key: z.string(),
  name: z.string(),
  scopes: z.array(z.string()),
}).transform((v) => {
  return remap$(v, {
    createdAt: "created_at",
    expiresAt: "expires_at",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ApiResponseCreateApiKeyResponseData$ {
  /** @deprecated use `ApiResponseCreateApiKeyResponseData$inboundSchema` instead. */
  export const inboundSchema =
    ApiResponseCreateApiKeyResponseData$inboundSchema;
  /** @deprecated use `ApiResponseCreateApiKeyResponseData$outboundSchema` instead. */
  export const outboundSchema =
    ApiResponseCreateApiKeyResponseData$outboundSchema;
  /** @deprecated use `ApiResponseCreateApiKeyResponseData$Outbound` instead. */
  export type Outbound = ApiResponseCreateApiKeyResponseData$Outbound;
}

export function apiResponseCreateApiKeyResponseDataToJSON(
  apiResponseCreateApiKeyResponseData: ApiResponseCreateApiKeyResponseData,
): string {
  return JSON.stringify(
    ApiResponseCreateApiKeyResponseData$outboundSchema.parse(
      apiResponseCreateApiKeyResponseData,
    ),
  );
}

export function apiResponseCreateApiKeyResponseDataFromJSON(
  jsonString: string,
): SafeParseResult<ApiResponseCreateApiKeyResponseData, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ApiResponseCreateApiKeyResponseData$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ApiResponseCreateApiKeyResponseData' from JSON`,
  );
}

/** @internal */
export const ApiResponseCreateApiKeyResponse$inboundSchema: z.ZodType<
  ApiResponseCreateApiKeyResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.lazy(() => ApiResponseCreateApiKeyResponseData$inboundSchema)
    .optional(),
  message: z.nullable(z.string()).optional(),
  success: z.boolean(),
});

/** @internal */
export type ApiResponseCreateApiKeyResponse$Outbound = {
  data?: ApiResponseCreateApiKeyResponseData$Outbound | undefined;
  message?: string | null | undefined;
  success: boolean;
};

/** @internal */
export const ApiResponseCreateApiKeyResponse$outboundSchema: z.ZodType<
  ApiResponseCreateApiKeyResponse$Outbound,
  z.ZodTypeDef,
  ApiResponseCreateApiKeyResponse
> = z.object({
  data: z.lazy(() => ApiResponseCreateApiKeyResponseData$outboundSchema)
    .optional(),
  message: z.nullable(z.string()).optional(),
  success: z.boolean(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ApiResponseCreateApiKeyResponse$ {
  /** @deprecated use `ApiResponseCreateApiKeyResponse$inboundSchema` instead. */
  export const inboundSchema = ApiResponseCreateApiKeyResponse$inboundSchema;
  /** @deprecated use `ApiResponseCreateApiKeyResponse$outboundSchema` instead. */
  export const outboundSchema = ApiResponseCreateApiKeyResponse$outboundSchema;
  /** @deprecated use `ApiResponseCreateApiKeyResponse$Outbound` instead. */
  export type Outbound = ApiResponseCreateApiKeyResponse$Outbound;
}

export function apiResponseCreateApiKeyResponseToJSON(
  apiResponseCreateApiKeyResponse: ApiResponseCreateApiKeyResponse,
): string {
  return JSON.stringify(
    ApiResponseCreateApiKeyResponse$outboundSchema.parse(
      apiResponseCreateApiKeyResponse,
    ),
  );
}

export function apiResponseCreateApiKeyResponseFromJSON(
  jsonString: string,
): SafeParseResult<ApiResponseCreateApiKeyResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ApiResponseCreateApiKeyResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ApiResponseCreateApiKeyResponse' from JSON`,
  );
}
