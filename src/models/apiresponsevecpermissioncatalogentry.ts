/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type ApiResponseVecPermissionCatalogEntryData = {
  key: string;
  value: number;
};

export type ApiResponseVecPermissionCatalogEntry = {
  data?: Array<ApiResponseVecPermissionCatalogEntryData> | undefined;
  message?: string | null | undefined;
  success: boolean;
};

/** @internal */
export const ApiResponseVecPermissionCatalogEntryData$inboundSchema: z.ZodType<
  ApiResponseVecPermissionCatalogEntryData,
  z.ZodTypeDef,
  unknown
> = z.object({
  key: z.string(),
  value: z.number().int(),
});

/** @internal */
export type ApiResponseVecPermissionCatalogEntryData$Outbound = {
  key: string;
  value: number;
};

/** @internal */
export const ApiResponseVecPermissionCatalogEntryData$outboundSchema: z.ZodType<
  ApiResponseVecPermissionCatalogEntryData$Outbound,
  z.ZodTypeDef,
  ApiResponseVecPermissionCatalogEntryData
> = z.object({
  key: z.string(),
  value: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ApiResponseVecPermissionCatalogEntryData$ {
  /** @deprecated use `ApiResponseVecPermissionCatalogEntryData$inboundSchema` instead. */
  export const inboundSchema =
    ApiResponseVecPermissionCatalogEntryData$inboundSchema;
  /** @deprecated use `ApiResponseVecPermissionCatalogEntryData$outboundSchema` instead. */
  export const outboundSchema =
    ApiResponseVecPermissionCatalogEntryData$outboundSchema;
  /** @deprecated use `ApiResponseVecPermissionCatalogEntryData$Outbound` instead. */
  export type Outbound = ApiResponseVecPermissionCatalogEntryData$Outbound;
}

export function apiResponseVecPermissionCatalogEntryDataToJSON(
  apiResponseVecPermissionCatalogEntryData:
    ApiResponseVecPermissionCatalogEntryData,
): string {
  return JSON.stringify(
    ApiResponseVecPermissionCatalogEntryData$outboundSchema.parse(
      apiResponseVecPermissionCatalogEntryData,
    ),
  );
}

export function apiResponseVecPermissionCatalogEntryDataFromJSON(
  jsonString: string,
): SafeParseResult<
  ApiResponseVecPermissionCatalogEntryData,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ApiResponseVecPermissionCatalogEntryData$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ApiResponseVecPermissionCatalogEntryData' from JSON`,
  );
}

/** @internal */
export const ApiResponseVecPermissionCatalogEntry$inboundSchema: z.ZodType<
  ApiResponseVecPermissionCatalogEntry,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.array(
    z.lazy(() => ApiResponseVecPermissionCatalogEntryData$inboundSchema),
  ).optional(),
  message: z.nullable(z.string()).optional(),
  success: z.boolean(),
});

/** @internal */
export type ApiResponseVecPermissionCatalogEntry$Outbound = {
  data?: Array<ApiResponseVecPermissionCatalogEntryData$Outbound> | undefined;
  message?: string | null | undefined;
  success: boolean;
};

/** @internal */
export const ApiResponseVecPermissionCatalogEntry$outboundSchema: z.ZodType<
  ApiResponseVecPermissionCatalogEntry$Outbound,
  z.ZodTypeDef,
  ApiResponseVecPermissionCatalogEntry
> = z.object({
  data: z.array(
    z.lazy(() => ApiResponseVecPermissionCatalogEntryData$outboundSchema),
  ).optional(),
  message: z.nullable(z.string()).optional(),
  success: z.boolean(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ApiResponseVecPermissionCatalogEntry$ {
  /** @deprecated use `ApiResponseVecPermissionCatalogEntry$inboundSchema` instead. */
  export const inboundSchema =
    ApiResponseVecPermissionCatalogEntry$inboundSchema;
  /** @deprecated use `ApiResponseVecPermissionCatalogEntry$outboundSchema` instead. */
  export const outboundSchema =
    ApiResponseVecPermissionCatalogEntry$outboundSchema;
  /** @deprecated use `ApiResponseVecPermissionCatalogEntry$Outbound` instead. */
  export type Outbound = ApiResponseVecPermissionCatalogEntry$Outbound;
}

export function apiResponseVecPermissionCatalogEntryToJSON(
  apiResponseVecPermissionCatalogEntry: ApiResponseVecPermissionCatalogEntry,
): string {
  return JSON.stringify(
    ApiResponseVecPermissionCatalogEntry$outboundSchema.parse(
      apiResponseVecPermissionCatalogEntry,
    ),
  );
}

export function apiResponseVecPermissionCatalogEntryFromJSON(
  jsonString: string,
): SafeParseResult<ApiResponseVecPermissionCatalogEntry, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ApiResponseVecPermissionCatalogEntry$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ApiResponseVecPermissionCatalogEntry' from JSON`,
  );
}
