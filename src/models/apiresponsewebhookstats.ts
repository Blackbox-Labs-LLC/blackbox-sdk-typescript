/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  EventTypeDelivery,
  EventTypeDelivery$inboundSchema,
  EventTypeDelivery$Outbound,
  EventTypeDelivery$outboundSchema,
} from "./eventtypedelivery.js";
import {
  WebhookActivity,
  WebhookActivity$inboundSchema,
  WebhookActivity$Outbound,
  WebhookActivity$outboundSchema,
} from "./webhookactivity.js";
import {
  WebhookDelivery,
  WebhookDelivery$inboundSchema,
  WebhookDelivery$Outbound,
  WebhookDelivery$outboundSchema,
} from "./webhookdelivery.js";

export type ApiResponseWebhookStatsData = {
  averageResponseTime?: number | null | undefined;
  deliveriesThisWeek: number;
  deliveriesToday: number;
  enabledWebhooks: number;
  eventDistribution: Array<EventTypeDelivery>;
  mostActiveWebhooks: Array<WebhookActivity>;
  recentFailures: Array<WebhookDelivery>;
  successRate: number;
  totalWebhooks: number;
};

export type ApiResponseWebhookStats = {
  data?: ApiResponseWebhookStatsData | undefined;
  message?: string | null | undefined;
  success: boolean;
};

/** @internal */
export const ApiResponseWebhookStatsData$inboundSchema: z.ZodType<
  ApiResponseWebhookStatsData,
  z.ZodTypeDef,
  unknown
> = z.object({
  average_response_time: z.nullable(z.number()).optional(),
  deliveries_this_week: z.number().int(),
  deliveries_today: z.number().int(),
  enabled_webhooks: z.number().int(),
  event_distribution: z.array(EventTypeDelivery$inboundSchema),
  most_active_webhooks: z.array(WebhookActivity$inboundSchema),
  recent_failures: z.array(WebhookDelivery$inboundSchema),
  success_rate: z.number(),
  total_webhooks: z.number().int(),
}).transform((v) => {
  return remap$(v, {
    "average_response_time": "averageResponseTime",
    "deliveries_this_week": "deliveriesThisWeek",
    "deliveries_today": "deliveriesToday",
    "enabled_webhooks": "enabledWebhooks",
    "event_distribution": "eventDistribution",
    "most_active_webhooks": "mostActiveWebhooks",
    "recent_failures": "recentFailures",
    "success_rate": "successRate",
    "total_webhooks": "totalWebhooks",
  });
});

/** @internal */
export type ApiResponseWebhookStatsData$Outbound = {
  average_response_time?: number | null | undefined;
  deliveries_this_week: number;
  deliveries_today: number;
  enabled_webhooks: number;
  event_distribution: Array<EventTypeDelivery$Outbound>;
  most_active_webhooks: Array<WebhookActivity$Outbound>;
  recent_failures: Array<WebhookDelivery$Outbound>;
  success_rate: number;
  total_webhooks: number;
};

/** @internal */
export const ApiResponseWebhookStatsData$outboundSchema: z.ZodType<
  ApiResponseWebhookStatsData$Outbound,
  z.ZodTypeDef,
  ApiResponseWebhookStatsData
> = z.object({
  averageResponseTime: z.nullable(z.number()).optional(),
  deliveriesThisWeek: z.number().int(),
  deliveriesToday: z.number().int(),
  enabledWebhooks: z.number().int(),
  eventDistribution: z.array(EventTypeDelivery$outboundSchema),
  mostActiveWebhooks: z.array(WebhookActivity$outboundSchema),
  recentFailures: z.array(WebhookDelivery$outboundSchema),
  successRate: z.number(),
  totalWebhooks: z.number().int(),
}).transform((v) => {
  return remap$(v, {
    averageResponseTime: "average_response_time",
    deliveriesThisWeek: "deliveries_this_week",
    deliveriesToday: "deliveries_today",
    enabledWebhooks: "enabled_webhooks",
    eventDistribution: "event_distribution",
    mostActiveWebhooks: "most_active_webhooks",
    recentFailures: "recent_failures",
    successRate: "success_rate",
    totalWebhooks: "total_webhooks",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ApiResponseWebhookStatsData$ {
  /** @deprecated use `ApiResponseWebhookStatsData$inboundSchema` instead. */
  export const inboundSchema = ApiResponseWebhookStatsData$inboundSchema;
  /** @deprecated use `ApiResponseWebhookStatsData$outboundSchema` instead. */
  export const outboundSchema = ApiResponseWebhookStatsData$outboundSchema;
  /** @deprecated use `ApiResponseWebhookStatsData$Outbound` instead. */
  export type Outbound = ApiResponseWebhookStatsData$Outbound;
}

export function apiResponseWebhookStatsDataToJSON(
  apiResponseWebhookStatsData: ApiResponseWebhookStatsData,
): string {
  return JSON.stringify(
    ApiResponseWebhookStatsData$outboundSchema.parse(
      apiResponseWebhookStatsData,
    ),
  );
}

export function apiResponseWebhookStatsDataFromJSON(
  jsonString: string,
): SafeParseResult<ApiResponseWebhookStatsData, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ApiResponseWebhookStatsData$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ApiResponseWebhookStatsData' from JSON`,
  );
}

/** @internal */
export const ApiResponseWebhookStats$inboundSchema: z.ZodType<
  ApiResponseWebhookStats,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.lazy(() => ApiResponseWebhookStatsData$inboundSchema).optional(),
  message: z.nullable(z.string()).optional(),
  success: z.boolean(),
});

/** @internal */
export type ApiResponseWebhookStats$Outbound = {
  data?: ApiResponseWebhookStatsData$Outbound | undefined;
  message?: string | null | undefined;
  success: boolean;
};

/** @internal */
export const ApiResponseWebhookStats$outboundSchema: z.ZodType<
  ApiResponseWebhookStats$Outbound,
  z.ZodTypeDef,
  ApiResponseWebhookStats
> = z.object({
  data: z.lazy(() => ApiResponseWebhookStatsData$outboundSchema).optional(),
  message: z.nullable(z.string()).optional(),
  success: z.boolean(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ApiResponseWebhookStats$ {
  /** @deprecated use `ApiResponseWebhookStats$inboundSchema` instead. */
  export const inboundSchema = ApiResponseWebhookStats$inboundSchema;
  /** @deprecated use `ApiResponseWebhookStats$outboundSchema` instead. */
  export const outboundSchema = ApiResponseWebhookStats$outboundSchema;
  /** @deprecated use `ApiResponseWebhookStats$Outbound` instead. */
  export type Outbound = ApiResponseWebhookStats$Outbound;
}

export function apiResponseWebhookStatsToJSON(
  apiResponseWebhookStats: ApiResponseWebhookStats,
): string {
  return JSON.stringify(
    ApiResponseWebhookStats$outboundSchema.parse(apiResponseWebhookStats),
  );
}

export function apiResponseWebhookStatsFromJSON(
  jsonString: string,
): SafeParseResult<ApiResponseWebhookStats, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ApiResponseWebhookStats$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ApiResponseWebhookStats' from JSON`,
  );
}
