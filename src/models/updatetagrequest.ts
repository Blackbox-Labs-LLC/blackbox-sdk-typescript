/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type UpdateTagRequest = {
  color?: string | null | undefined;
  name?: string | null | undefined;
};

/** @internal */
export const UpdateTagRequest$inboundSchema: z.ZodType<
  UpdateTagRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  color: z.nullable(z.string()).optional(),
  name: z.nullable(z.string()).optional(),
});

/** @internal */
export type UpdateTagRequest$Outbound = {
  color?: string | null | undefined;
  name?: string | null | undefined;
};

/** @internal */
export const UpdateTagRequest$outboundSchema: z.ZodType<
  UpdateTagRequest$Outbound,
  z.ZodTypeDef,
  UpdateTagRequest
> = z.object({
  color: z.nullable(z.string()).optional(),
  name: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateTagRequest$ {
  /** @deprecated use `UpdateTagRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateTagRequest$inboundSchema;
  /** @deprecated use `UpdateTagRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateTagRequest$outboundSchema;
  /** @deprecated use `UpdateTagRequest$Outbound` instead. */
  export type Outbound = UpdateTagRequest$Outbound;
}

export function updateTagRequestToJSON(
  updateTagRequest: UpdateTagRequest,
): string {
  return JSON.stringify(
    UpdateTagRequest$outboundSchema.parse(updateTagRequest),
  );
}

export function updateTagRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateTagRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateTagRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateTagRequest' from JSON`,
  );
}
