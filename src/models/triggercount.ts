/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type TriggerCount = {
  count: number;
  trigger: string;
};

/** @internal */
export const TriggerCount$inboundSchema: z.ZodType<
  TriggerCount,
  z.ZodTypeDef,
  unknown
> = z.object({
  count: z.number().int(),
  trigger: z.string(),
});

/** @internal */
export type TriggerCount$Outbound = {
  count: number;
  trigger: string;
};

/** @internal */
export const TriggerCount$outboundSchema: z.ZodType<
  TriggerCount$Outbound,
  z.ZodTypeDef,
  TriggerCount
> = z.object({
  count: z.number().int(),
  trigger: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TriggerCount$ {
  /** @deprecated use `TriggerCount$inboundSchema` instead. */
  export const inboundSchema = TriggerCount$inboundSchema;
  /** @deprecated use `TriggerCount$outboundSchema` instead. */
  export const outboundSchema = TriggerCount$outboundSchema;
  /** @deprecated use `TriggerCount$Outbound` instead. */
  export type Outbound = TriggerCount$Outbound;
}

export function triggerCountToJSON(triggerCount: TriggerCount): string {
  return JSON.stringify(TriggerCount$outboundSchema.parse(triggerCount));
}

export function triggerCountFromJSON(
  jsonString: string,
): SafeParseResult<TriggerCount, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => TriggerCount$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'TriggerCount' from JSON`,
  );
}
