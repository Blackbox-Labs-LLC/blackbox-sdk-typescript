/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type ApiResponseSessionStatsData = {
  activeSessions: number;
  expiredSessions: number;
  totalSessions: number;
};

export type ApiResponseSessionStats = {
  data?: ApiResponseSessionStatsData | undefined;
  message?: string | null | undefined;
  success: boolean;
};

/** @internal */
export const ApiResponseSessionStatsData$inboundSchema: z.ZodType<
  ApiResponseSessionStatsData,
  z.ZodTypeDef,
  unknown
> = z.object({
  active_sessions: z.number().int(),
  expired_sessions: z.number().int(),
  total_sessions: z.number().int(),
}).transform((v) => {
  return remap$(v, {
    "active_sessions": "activeSessions",
    "expired_sessions": "expiredSessions",
    "total_sessions": "totalSessions",
  });
});

/** @internal */
export type ApiResponseSessionStatsData$Outbound = {
  active_sessions: number;
  expired_sessions: number;
  total_sessions: number;
};

/** @internal */
export const ApiResponseSessionStatsData$outboundSchema: z.ZodType<
  ApiResponseSessionStatsData$Outbound,
  z.ZodTypeDef,
  ApiResponseSessionStatsData
> = z.object({
  activeSessions: z.number().int(),
  expiredSessions: z.number().int(),
  totalSessions: z.number().int(),
}).transform((v) => {
  return remap$(v, {
    activeSessions: "active_sessions",
    expiredSessions: "expired_sessions",
    totalSessions: "total_sessions",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ApiResponseSessionStatsData$ {
  /** @deprecated use `ApiResponseSessionStatsData$inboundSchema` instead. */
  export const inboundSchema = ApiResponseSessionStatsData$inboundSchema;
  /** @deprecated use `ApiResponseSessionStatsData$outboundSchema` instead. */
  export const outboundSchema = ApiResponseSessionStatsData$outboundSchema;
  /** @deprecated use `ApiResponseSessionStatsData$Outbound` instead. */
  export type Outbound = ApiResponseSessionStatsData$Outbound;
}

export function apiResponseSessionStatsDataToJSON(
  apiResponseSessionStatsData: ApiResponseSessionStatsData,
): string {
  return JSON.stringify(
    ApiResponseSessionStatsData$outboundSchema.parse(
      apiResponseSessionStatsData,
    ),
  );
}

export function apiResponseSessionStatsDataFromJSON(
  jsonString: string,
): SafeParseResult<ApiResponseSessionStatsData, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ApiResponseSessionStatsData$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ApiResponseSessionStatsData' from JSON`,
  );
}

/** @internal */
export const ApiResponseSessionStats$inboundSchema: z.ZodType<
  ApiResponseSessionStats,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.lazy(() => ApiResponseSessionStatsData$inboundSchema).optional(),
  message: z.nullable(z.string()).optional(),
  success: z.boolean(),
});

/** @internal */
export type ApiResponseSessionStats$Outbound = {
  data?: ApiResponseSessionStatsData$Outbound | undefined;
  message?: string | null | undefined;
  success: boolean;
};

/** @internal */
export const ApiResponseSessionStats$outboundSchema: z.ZodType<
  ApiResponseSessionStats$Outbound,
  z.ZodTypeDef,
  ApiResponseSessionStats
> = z.object({
  data: z.lazy(() => ApiResponseSessionStatsData$outboundSchema).optional(),
  message: z.nullable(z.string()).optional(),
  success: z.boolean(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ApiResponseSessionStats$ {
  /** @deprecated use `ApiResponseSessionStats$inboundSchema` instead. */
  export const inboundSchema = ApiResponseSessionStats$inboundSchema;
  /** @deprecated use `ApiResponseSessionStats$outboundSchema` instead. */
  export const outboundSchema = ApiResponseSessionStats$outboundSchema;
  /** @deprecated use `ApiResponseSessionStats$Outbound` instead. */
  export type Outbound = ApiResponseSessionStats$Outbound;
}

export function apiResponseSessionStatsToJSON(
  apiResponseSessionStats: ApiResponseSessionStats,
): string {
  return JSON.stringify(
    ApiResponseSessionStats$outboundSchema.parse(apiResponseSessionStats),
  );
}

export function apiResponseSessionStatsFromJSON(
  jsonString: string,
): SafeParseResult<ApiResponseSessionStats, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ApiResponseSessionStats$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ApiResponseSessionStats' from JSON`,
  );
}
