/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type PriorityCount = {
  count: number;
  percentage: number;
  priority: string;
};

/** @internal */
export const PriorityCount$inboundSchema: z.ZodType<
  PriorityCount,
  z.ZodTypeDef,
  unknown
> = z.object({
  count: z.number().int(),
  percentage: z.number(),
  priority: z.string(),
});

/** @internal */
export type PriorityCount$Outbound = {
  count: number;
  percentage: number;
  priority: string;
};

/** @internal */
export const PriorityCount$outboundSchema: z.ZodType<
  PriorityCount$Outbound,
  z.ZodTypeDef,
  PriorityCount
> = z.object({
  count: z.number().int(),
  percentage: z.number(),
  priority: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PriorityCount$ {
  /** @deprecated use `PriorityCount$inboundSchema` instead. */
  export const inboundSchema = PriorityCount$inboundSchema;
  /** @deprecated use `PriorityCount$outboundSchema` instead. */
  export const outboundSchema = PriorityCount$outboundSchema;
  /** @deprecated use `PriorityCount$Outbound` instead. */
  export type Outbound = PriorityCount$Outbound;
}

export function priorityCountToJSON(priorityCount: PriorityCount): string {
  return JSON.stringify(PriorityCount$outboundSchema.parse(priorityCount));
}

export function priorityCountFromJSON(
  jsonString: string,
): SafeParseResult<PriorityCount, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PriorityCount$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PriorityCount' from JSON`,
  );
}
