/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  MacroUsage,
  MacroUsage$inboundSchema,
  MacroUsage$Outbound,
  MacroUsage$outboundSchema,
} from "./macrousage.js";

export type MacroUsageStats = {
  macrosUsedThisMonth: number;
  macrosUsedToday: number;
  mostUsedMacros: Array<MacroUsage>;
  totalMacros: number;
};

/** @internal */
export const MacroUsageStats$inboundSchema: z.ZodType<
  MacroUsageStats,
  z.ZodTypeDef,
  unknown
> = z.object({
  macros_used_this_month: z.number().int(),
  macros_used_today: z.number().int(),
  most_used_macros: z.array(MacroUsage$inboundSchema),
  total_macros: z.number().int(),
}).transform((v) => {
  return remap$(v, {
    "macros_used_this_month": "macrosUsedThisMonth",
    "macros_used_today": "macrosUsedToday",
    "most_used_macros": "mostUsedMacros",
    "total_macros": "totalMacros",
  });
});

/** @internal */
export type MacroUsageStats$Outbound = {
  macros_used_this_month: number;
  macros_used_today: number;
  most_used_macros: Array<MacroUsage$Outbound>;
  total_macros: number;
};

/** @internal */
export const MacroUsageStats$outboundSchema: z.ZodType<
  MacroUsageStats$Outbound,
  z.ZodTypeDef,
  MacroUsageStats
> = z.object({
  macrosUsedThisMonth: z.number().int(),
  macrosUsedToday: z.number().int(),
  mostUsedMacros: z.array(MacroUsage$outboundSchema),
  totalMacros: z.number().int(),
}).transform((v) => {
  return remap$(v, {
    macrosUsedThisMonth: "macros_used_this_month",
    macrosUsedToday: "macros_used_today",
    mostUsedMacros: "most_used_macros",
    totalMacros: "total_macros",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MacroUsageStats$ {
  /** @deprecated use `MacroUsageStats$inboundSchema` instead. */
  export const inboundSchema = MacroUsageStats$inboundSchema;
  /** @deprecated use `MacroUsageStats$outboundSchema` instead. */
  export const outboundSchema = MacroUsageStats$outboundSchema;
  /** @deprecated use `MacroUsageStats$Outbound` instead. */
  export type Outbound = MacroUsageStats$Outbound;
}

export function macroUsageStatsToJSON(
  macroUsageStats: MacroUsageStats,
): string {
  return JSON.stringify(MacroUsageStats$outboundSchema.parse(macroUsageStats));
}

export function macroUsageStatsFromJSON(
  jsonString: string,
): SafeParseResult<MacroUsageStats, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => MacroUsageStats$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'MacroUsageStats' from JSON`,
  );
}
