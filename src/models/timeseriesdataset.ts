/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type TimeSeriesDataset = {
  color: string;
  data: Array<number>;
  label: string;
};

/** @internal */
export const TimeSeriesDataset$inboundSchema: z.ZodType<
  TimeSeriesDataset,
  z.ZodTypeDef,
  unknown
> = z.object({
  color: z.string(),
  data: z.array(z.number().int()),
  label: z.string(),
});

/** @internal */
export type TimeSeriesDataset$Outbound = {
  color: string;
  data: Array<number>;
  label: string;
};

/** @internal */
export const TimeSeriesDataset$outboundSchema: z.ZodType<
  TimeSeriesDataset$Outbound,
  z.ZodTypeDef,
  TimeSeriesDataset
> = z.object({
  color: z.string(),
  data: z.array(z.number().int()),
  label: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TimeSeriesDataset$ {
  /** @deprecated use `TimeSeriesDataset$inboundSchema` instead. */
  export const inboundSchema = TimeSeriesDataset$inboundSchema;
  /** @deprecated use `TimeSeriesDataset$outboundSchema` instead. */
  export const outboundSchema = TimeSeriesDataset$outboundSchema;
  /** @deprecated use `TimeSeriesDataset$Outbound` instead. */
  export type Outbound = TimeSeriesDataset$Outbound;
}

export function timeSeriesDatasetToJSON(
  timeSeriesDataset: TimeSeriesDataset,
): string {
  return JSON.stringify(
    TimeSeriesDataset$outboundSchema.parse(timeSeriesDataset),
  );
}

export function timeSeriesDatasetFromJSON(
  jsonString: string,
): SafeParseResult<TimeSeriesDataset, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => TimeSeriesDataset$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'TimeSeriesDataset' from JSON`,
  );
}
