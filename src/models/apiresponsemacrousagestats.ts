/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  MacroUsage,
  MacroUsage$inboundSchema,
  MacroUsage$Outbound,
  MacroUsage$outboundSchema,
} from "./macrousage.js";

export type ApiResponseMacroUsageStatsData = {
  macrosUsedThisMonth: number;
  macrosUsedToday: number;
  mostUsedMacros: Array<MacroUsage>;
  totalMacros: number;
};

export type ApiResponseMacroUsageStats = {
  data?: ApiResponseMacroUsageStatsData | undefined;
  message?: string | null | undefined;
  success: boolean;
};

/** @internal */
export const ApiResponseMacroUsageStatsData$inboundSchema: z.ZodType<
  ApiResponseMacroUsageStatsData,
  z.ZodTypeDef,
  unknown
> = z.object({
  macros_used_this_month: z.number().int(),
  macros_used_today: z.number().int(),
  most_used_macros: z.array(MacroUsage$inboundSchema),
  total_macros: z.number().int(),
}).transform((v) => {
  return remap$(v, {
    "macros_used_this_month": "macrosUsedThisMonth",
    "macros_used_today": "macrosUsedToday",
    "most_used_macros": "mostUsedMacros",
    "total_macros": "totalMacros",
  });
});

/** @internal */
export type ApiResponseMacroUsageStatsData$Outbound = {
  macros_used_this_month: number;
  macros_used_today: number;
  most_used_macros: Array<MacroUsage$Outbound>;
  total_macros: number;
};

/** @internal */
export const ApiResponseMacroUsageStatsData$outboundSchema: z.ZodType<
  ApiResponseMacroUsageStatsData$Outbound,
  z.ZodTypeDef,
  ApiResponseMacroUsageStatsData
> = z.object({
  macrosUsedThisMonth: z.number().int(),
  macrosUsedToday: z.number().int(),
  mostUsedMacros: z.array(MacroUsage$outboundSchema),
  totalMacros: z.number().int(),
}).transform((v) => {
  return remap$(v, {
    macrosUsedThisMonth: "macros_used_this_month",
    macrosUsedToday: "macros_used_today",
    mostUsedMacros: "most_used_macros",
    totalMacros: "total_macros",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ApiResponseMacroUsageStatsData$ {
  /** @deprecated use `ApiResponseMacroUsageStatsData$inboundSchema` instead. */
  export const inboundSchema = ApiResponseMacroUsageStatsData$inboundSchema;
  /** @deprecated use `ApiResponseMacroUsageStatsData$outboundSchema` instead. */
  export const outboundSchema = ApiResponseMacroUsageStatsData$outboundSchema;
  /** @deprecated use `ApiResponseMacroUsageStatsData$Outbound` instead. */
  export type Outbound = ApiResponseMacroUsageStatsData$Outbound;
}

export function apiResponseMacroUsageStatsDataToJSON(
  apiResponseMacroUsageStatsData: ApiResponseMacroUsageStatsData,
): string {
  return JSON.stringify(
    ApiResponseMacroUsageStatsData$outboundSchema.parse(
      apiResponseMacroUsageStatsData,
    ),
  );
}

export function apiResponseMacroUsageStatsDataFromJSON(
  jsonString: string,
): SafeParseResult<ApiResponseMacroUsageStatsData, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ApiResponseMacroUsageStatsData$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ApiResponseMacroUsageStatsData' from JSON`,
  );
}

/** @internal */
export const ApiResponseMacroUsageStats$inboundSchema: z.ZodType<
  ApiResponseMacroUsageStats,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.lazy(() => ApiResponseMacroUsageStatsData$inboundSchema).optional(),
  message: z.nullable(z.string()).optional(),
  success: z.boolean(),
});

/** @internal */
export type ApiResponseMacroUsageStats$Outbound = {
  data?: ApiResponseMacroUsageStatsData$Outbound | undefined;
  message?: string | null | undefined;
  success: boolean;
};

/** @internal */
export const ApiResponseMacroUsageStats$outboundSchema: z.ZodType<
  ApiResponseMacroUsageStats$Outbound,
  z.ZodTypeDef,
  ApiResponseMacroUsageStats
> = z.object({
  data: z.lazy(() => ApiResponseMacroUsageStatsData$outboundSchema).optional(),
  message: z.nullable(z.string()).optional(),
  success: z.boolean(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ApiResponseMacroUsageStats$ {
  /** @deprecated use `ApiResponseMacroUsageStats$inboundSchema` instead. */
  export const inboundSchema = ApiResponseMacroUsageStats$inboundSchema;
  /** @deprecated use `ApiResponseMacroUsageStats$outboundSchema` instead. */
  export const outboundSchema = ApiResponseMacroUsageStats$outboundSchema;
  /** @deprecated use `ApiResponseMacroUsageStats$Outbound` instead. */
  export type Outbound = ApiResponseMacroUsageStats$Outbound;
}

export function apiResponseMacroUsageStatsToJSON(
  apiResponseMacroUsageStats: ApiResponseMacroUsageStats,
): string {
  return JSON.stringify(
    ApiResponseMacroUsageStats$outboundSchema.parse(apiResponseMacroUsageStats),
  );
}

export function apiResponseMacroUsageStatsFromJSON(
  jsonString: string,
): SafeParseResult<ApiResponseMacroUsageStats, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ApiResponseMacroUsageStats$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ApiResponseMacroUsageStats' from JSON`,
  );
}
