/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type ExtendSessionRequest = {
  extensionHours: number;
};

/** @internal */
export const ExtendSessionRequest$inboundSchema: z.ZodType<
  ExtendSessionRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  extension_hours: z.number().int(),
}).transform((v) => {
  return remap$(v, {
    "extension_hours": "extensionHours",
  });
});

/** @internal */
export type ExtendSessionRequest$Outbound = {
  extension_hours: number;
};

/** @internal */
export const ExtendSessionRequest$outboundSchema: z.ZodType<
  ExtendSessionRequest$Outbound,
  z.ZodTypeDef,
  ExtendSessionRequest
> = z.object({
  extensionHours: z.number().int(),
}).transform((v) => {
  return remap$(v, {
    extensionHours: "extension_hours",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExtendSessionRequest$ {
  /** @deprecated use `ExtendSessionRequest$inboundSchema` instead. */
  export const inboundSchema = ExtendSessionRequest$inboundSchema;
  /** @deprecated use `ExtendSessionRequest$outboundSchema` instead. */
  export const outboundSchema = ExtendSessionRequest$outboundSchema;
  /** @deprecated use `ExtendSessionRequest$Outbound` instead. */
  export type Outbound = ExtendSessionRequest$Outbound;
}

export function extendSessionRequestToJSON(
  extendSessionRequest: ExtendSessionRequest,
): string {
  return JSON.stringify(
    ExtendSessionRequest$outboundSchema.parse(extendSessionRequest),
  );
}

export function extendSessionRequestFromJSON(
  jsonString: string,
): SafeParseResult<ExtendSessionRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ExtendSessionRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ExtendSessionRequest' from JSON`,
  );
}
