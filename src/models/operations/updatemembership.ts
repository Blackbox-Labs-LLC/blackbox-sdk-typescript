/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export type UpdateMembershipRequest = {
  /**
   * Organization ID
   */
  orgId: string;
  /**
   * Member user ID
   */
  memberId: string;
  updateMembershipRequest: models.UpdateMembershipRequest;
};

/** @internal */
export const UpdateMembershipRequest$inboundSchema: z.ZodType<
  UpdateMembershipRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  org_id: z.string(),
  member_id: z.string(),
  UpdateMembershipRequest: models.UpdateMembershipRequest$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "org_id": "orgId",
    "member_id": "memberId",
    "UpdateMembershipRequest": "updateMembershipRequest",
  });
});

/** @internal */
export type UpdateMembershipRequest$Outbound = {
  org_id: string;
  member_id: string;
  UpdateMembershipRequest: models.UpdateMembershipRequest$Outbound;
};

/** @internal */
export const UpdateMembershipRequest$outboundSchema: z.ZodType<
  UpdateMembershipRequest$Outbound,
  z.ZodTypeDef,
  UpdateMembershipRequest
> = z.object({
  orgId: z.string(),
  memberId: z.string(),
  updateMembershipRequest: models.UpdateMembershipRequest$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    orgId: "org_id",
    memberId: "member_id",
    updateMembershipRequest: "UpdateMembershipRequest",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateMembershipRequest$ {
  /** @deprecated use `UpdateMembershipRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateMembershipRequest$inboundSchema;
  /** @deprecated use `UpdateMembershipRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateMembershipRequest$outboundSchema;
  /** @deprecated use `UpdateMembershipRequest$Outbound` instead. */
  export type Outbound = UpdateMembershipRequest$Outbound;
}

export function updateMembershipRequestToJSON(
  updateMembershipRequest: UpdateMembershipRequest,
): string {
  return JSON.stringify(
    UpdateMembershipRequest$outboundSchema.parse(updateMembershipRequest),
  );
}

export function updateMembershipRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateMembershipRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateMembershipRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateMembershipRequest' from JSON`,
  );
}
