/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export type CreateTagRequest = {
  /**
   * Organization ID
   */
  orgId: string;
  createTagRequest: models.CreateTagRequest;
};

/** @internal */
export const CreateTagRequest$inboundSchema: z.ZodType<
  CreateTagRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  org_id: z.string(),
  CreateTagRequest: models.CreateTagRequest$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "org_id": "orgId",
    "CreateTagRequest": "createTagRequest",
  });
});

/** @internal */
export type CreateTagRequest$Outbound = {
  org_id: string;
  CreateTagRequest: models.CreateTagRequest$Outbound;
};

/** @internal */
export const CreateTagRequest$outboundSchema: z.ZodType<
  CreateTagRequest$Outbound,
  z.ZodTypeDef,
  CreateTagRequest
> = z.object({
  orgId: z.string(),
  createTagRequest: models.CreateTagRequest$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    orgId: "org_id",
    createTagRequest: "CreateTagRequest",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateTagRequest$ {
  /** @deprecated use `CreateTagRequest$inboundSchema` instead. */
  export const inboundSchema = CreateTagRequest$inboundSchema;
  /** @deprecated use `CreateTagRequest$outboundSchema` instead. */
  export const outboundSchema = CreateTagRequest$outboundSchema;
  /** @deprecated use `CreateTagRequest$Outbound` instead. */
  export type Outbound = CreateTagRequest$Outbound;
}

export function createTagRequestToJSON(
  createTagRequest: CreateTagRequest,
): string {
  return JSON.stringify(
    CreateTagRequest$outboundSchema.parse(createTagRequest),
  );
}

export function createTagRequestFromJSON(
  jsonString: string,
): SafeParseResult<CreateTagRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateTagRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateTagRequest' from JSON`,
  );
}
