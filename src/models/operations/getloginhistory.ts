/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetLoginHistoryRequest = {
  /**
   * Maximum number of entries to return
   */
  limit?: number | undefined;
};

/** @internal */
export const GetLoginHistoryRequest$inboundSchema: z.ZodType<
  GetLoginHistoryRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  limit: z.number().int().optional(),
});

/** @internal */
export type GetLoginHistoryRequest$Outbound = {
  limit?: number | undefined;
};

/** @internal */
export const GetLoginHistoryRequest$outboundSchema: z.ZodType<
  GetLoginHistoryRequest$Outbound,
  z.ZodTypeDef,
  GetLoginHistoryRequest
> = z.object({
  limit: z.number().int().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetLoginHistoryRequest$ {
  /** @deprecated use `GetLoginHistoryRequest$inboundSchema` instead. */
  export const inboundSchema = GetLoginHistoryRequest$inboundSchema;
  /** @deprecated use `GetLoginHistoryRequest$outboundSchema` instead. */
  export const outboundSchema = GetLoginHistoryRequest$outboundSchema;
  /** @deprecated use `GetLoginHistoryRequest$Outbound` instead. */
  export type Outbound = GetLoginHistoryRequest$Outbound;
}

export function getLoginHistoryRequestToJSON(
  getLoginHistoryRequest: GetLoginHistoryRequest,
): string {
  return JSON.stringify(
    GetLoginHistoryRequest$outboundSchema.parse(getLoginHistoryRequest),
  );
}

export function getLoginHistoryRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetLoginHistoryRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetLoginHistoryRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetLoginHistoryRequest' from JSON`,
  );
}
