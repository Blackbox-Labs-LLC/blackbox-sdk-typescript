/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  TimeSeriesDataset,
  TimeSeriesDataset$inboundSchema,
  TimeSeriesDataset$Outbound,
  TimeSeriesDataset$outboundSchema,
} from "./timeseriesdataset.js";

export type ApiResponseTimeSeriesDataData = {
  datasets: Array<TimeSeriesDataset>;
  labels: Array<string>;
};

export type ApiResponseTimeSeriesData = {
  data?: ApiResponseTimeSeriesDataData | undefined;
  message?: string | null | undefined;
  success: boolean;
};

/** @internal */
export const ApiResponseTimeSeriesDataData$inboundSchema: z.ZodType<
  ApiResponseTimeSeriesDataData,
  z.ZodTypeDef,
  unknown
> = z.object({
  datasets: z.array(TimeSeriesDataset$inboundSchema),
  labels: z.array(z.string()),
});

/** @internal */
export type ApiResponseTimeSeriesDataData$Outbound = {
  datasets: Array<TimeSeriesDataset$Outbound>;
  labels: Array<string>;
};

/** @internal */
export const ApiResponseTimeSeriesDataData$outboundSchema: z.ZodType<
  ApiResponseTimeSeriesDataData$Outbound,
  z.ZodTypeDef,
  ApiResponseTimeSeriesDataData
> = z.object({
  datasets: z.array(TimeSeriesDataset$outboundSchema),
  labels: z.array(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ApiResponseTimeSeriesDataData$ {
  /** @deprecated use `ApiResponseTimeSeriesDataData$inboundSchema` instead. */
  export const inboundSchema = ApiResponseTimeSeriesDataData$inboundSchema;
  /** @deprecated use `ApiResponseTimeSeriesDataData$outboundSchema` instead. */
  export const outboundSchema = ApiResponseTimeSeriesDataData$outboundSchema;
  /** @deprecated use `ApiResponseTimeSeriesDataData$Outbound` instead. */
  export type Outbound = ApiResponseTimeSeriesDataData$Outbound;
}

export function apiResponseTimeSeriesDataDataToJSON(
  apiResponseTimeSeriesDataData: ApiResponseTimeSeriesDataData,
): string {
  return JSON.stringify(
    ApiResponseTimeSeriesDataData$outboundSchema.parse(
      apiResponseTimeSeriesDataData,
    ),
  );
}

export function apiResponseTimeSeriesDataDataFromJSON(
  jsonString: string,
): SafeParseResult<ApiResponseTimeSeriesDataData, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ApiResponseTimeSeriesDataData$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ApiResponseTimeSeriesDataData' from JSON`,
  );
}

/** @internal */
export const ApiResponseTimeSeriesData$inboundSchema: z.ZodType<
  ApiResponseTimeSeriesData,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.lazy(() => ApiResponseTimeSeriesDataData$inboundSchema).optional(),
  message: z.nullable(z.string()).optional(),
  success: z.boolean(),
});

/** @internal */
export type ApiResponseTimeSeriesData$Outbound = {
  data?: ApiResponseTimeSeriesDataData$Outbound | undefined;
  message?: string | null | undefined;
  success: boolean;
};

/** @internal */
export const ApiResponseTimeSeriesData$outboundSchema: z.ZodType<
  ApiResponseTimeSeriesData$Outbound,
  z.ZodTypeDef,
  ApiResponseTimeSeriesData
> = z.object({
  data: z.lazy(() => ApiResponseTimeSeriesDataData$outboundSchema).optional(),
  message: z.nullable(z.string()).optional(),
  success: z.boolean(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ApiResponseTimeSeriesData$ {
  /** @deprecated use `ApiResponseTimeSeriesData$inboundSchema` instead. */
  export const inboundSchema = ApiResponseTimeSeriesData$inboundSchema;
  /** @deprecated use `ApiResponseTimeSeriesData$outboundSchema` instead. */
  export const outboundSchema = ApiResponseTimeSeriesData$outboundSchema;
  /** @deprecated use `ApiResponseTimeSeriesData$Outbound` instead. */
  export type Outbound = ApiResponseTimeSeriesData$Outbound;
}

export function apiResponseTimeSeriesDataToJSON(
  apiResponseTimeSeriesData: ApiResponseTimeSeriesData,
): string {
  return JSON.stringify(
    ApiResponseTimeSeriesData$outboundSchema.parse(apiResponseTimeSeriesData),
  );
}

export function apiResponseTimeSeriesDataFromJSON(
  jsonString: string,
): SafeParseResult<ApiResponseTimeSeriesData, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ApiResponseTimeSeriesData$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ApiResponseTimeSeriesData' from JSON`,
  );
}
