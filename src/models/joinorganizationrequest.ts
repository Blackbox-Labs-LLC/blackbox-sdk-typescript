/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type JoinOrganizationRequest = {
  orgId: string;
};

/** @internal */
export const JoinOrganizationRequest$inboundSchema: z.ZodType<
  JoinOrganizationRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  org_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "org_id": "orgId",
  });
});

/** @internal */
export type JoinOrganizationRequest$Outbound = {
  org_id: string;
};

/** @internal */
export const JoinOrganizationRequest$outboundSchema: z.ZodType<
  JoinOrganizationRequest$Outbound,
  z.ZodTypeDef,
  JoinOrganizationRequest
> = z.object({
  orgId: z.string(),
}).transform((v) => {
  return remap$(v, {
    orgId: "org_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace JoinOrganizationRequest$ {
  /** @deprecated use `JoinOrganizationRequest$inboundSchema` instead. */
  export const inboundSchema = JoinOrganizationRequest$inboundSchema;
  /** @deprecated use `JoinOrganizationRequest$outboundSchema` instead. */
  export const outboundSchema = JoinOrganizationRequest$outboundSchema;
  /** @deprecated use `JoinOrganizationRequest$Outbound` instead. */
  export type Outbound = JoinOrganizationRequest$Outbound;
}

export function joinOrganizationRequestToJSON(
  joinOrganizationRequest: JoinOrganizationRequest,
): string {
  return JSON.stringify(
    JoinOrganizationRequest$outboundSchema.parse(joinOrganizationRequest),
  );
}

export function joinOrganizationRequestFromJSON(
  jsonString: string,
): SafeParseResult<JoinOrganizationRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => JoinOrganizationRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'JoinOrganizationRequest' from JSON`,
  );
}
