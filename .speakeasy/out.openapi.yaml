openapi: "3.1.0"
info:
  title: "Blackbox Customer Support API"
  description: "Enterprise-grade customer support and ticketing system with advanced analytics, automation, and integrations. Built for modern teams who need powerful, scalable support infrastructure."
  contact:
    name: "Blackbox Support"
    url: "https://blackbox.com/support"
    email: "support@blackbox.com"
  license:
    name: "Apache License 2.0"
    url: "https://www.apache.org/licenses/LICENSE-2.0"
  version: "1.0.0"
servers:
  - url: "http://localhost:8080"
    description: "Local development server"
  - url: "https://staging.api.blckbox.dev"
    description: "Staging server"
  - url: "https://api.blckbox.dev"
    description: "Production server"
paths:
  "/api/v0/admin/attachments/stats":
    get:
      tags:
        - "Attachments"
      operationId: "get_attachment_stats"
      responses:
        "200":
          description: "File storage statistics"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_Value"}
        "401":
          description: "Not authenticated"
        "403":
          description: "Admin access required"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "getStats"
  "/api/v0/attachments/{attachment_id}/download":
    get:
      tags:
        - "Attachments"
      operationId: "download_attachment"
      parameters:
        - name: "attachment_id"
          in: "path"
          description: "Attachment ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      responses:
        "200":
          description: "File download"
          content:
            "application/octet-stream": {}
        "401":
          description: "Not authenticated"
        "404":
          description: "Attachment not found"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "download"
  "/api/v0/auth/disable-2fa":
    post:
      tags:
        - "Authentication"
      operationId: "disable_2fa"
      responses:
        "200":
          description: "2FA disabled successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_String"}
        "401":
          description: "Not authenticated"
        "403":
          description: "Email verification required"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "disable2fa"
  "/api/v0/auth/enable-2fa":
    post:
      tags:
        - "Authentication"
      operationId: "enable_2fa"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/Enable2FARequest"}
        required: true
      responses:
        "200":
          description: "2FA enabled successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_String"}
        "400":
          description: "Invalid TOTP code"
        "401":
          description: "Not authenticated"
        "403":
          description: "Email verification required"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "enable2fa"
  "/api/v0/auth/login":
    post:
      tags:
        - "Authentication"
      operationId: "login"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/LoginRequest"}
        required: true
      responses:
        "200":
          description: "Login successful"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_AuthResponse"}
        "401":
          description: "Invalid credentials"
        "403":
          description: "2FA code required"
  "/api/v0/auth/logout":
    post:
      tags:
        - "Authentication"
      operationId: "logout"
      responses:
        "200":
          description: "Logout successful"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_String"}
        "401":
          description: "Not authenticated"
      security:
        - blackbox_auth_token: []
  "/api/v0/auth/register":
    post:
      tags:
        - "Authentication"
      operationId: "register"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/RegisterRequest"}
        required: true
      responses:
        "201":
          description: "User registered successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_RegisterResponse"}
        "400":
          description: "Invalid input"
        "409":
          description: "Email already exists"
  "/api/v0/auth/request-password-reset":
    post:
      tags:
        - "Authentication"
      operationId: "request_password_reset"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/PasswordResetRequest"}
        required: true
      responses:
        "200":
          description: "Password reset email sent"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_String"}
        "404":
          description: "User not found"
      x-speakeasy-name-override: "requestPasswordReset"
  "/api/v0/auth/resend-verification":
    post:
      tags:
        - "Authentication"
      operationId: "resend_verification"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/ResendVerificationRequest"}
        required: true
      responses:
        "200":
          description: "Verification email sent"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_String"}
        "400":
          description: "Email already verified or rate limit exceeded"
        "404":
          description: "User not found"
        "429":
          description: "Rate limit exceeded"
      x-speakeasy-name-override: "resendVerification"
  "/api/v0/auth/reset-password":
    post:
      tags:
        - "Authentication"
      operationId: "reset_password"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/ResetPasswordRequest"}
        required: true
      responses:
        "200":
          description: "Password reset successful"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_String"}
        "400":
          description: "Invalid or expired token"
      x-speakeasy-name-override: "resetPassword"
  "/api/v0/auth/setup-2fa":
    post:
      tags:
        - "Authentication"
      operationId: "setup_2fa"
      responses:
        "200":
          description: "2FA setup data"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_Setup2FAResponse"}
        "401":
          description: "Not authenticated"
        "403":
          description: "Email verification required"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "setup2fa"
  "/api/v0/auth/verify-email":
    post:
      tags:
        - "Authentication"
      operationId: "verify_email"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/VerifyEmailRequest"}
        required: true
      responses:
        "200":
          description: "Email verified successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_String"}
        "400":
          description: "Invalid or expired verification token"
      x-speakeasy-name-override: "verifyEmail"
  "/api/v0/organizations":
    get:
      tags:
        - "Organizations"
      operationId: "get_user_organizations"
      responses:
        "200":
          description: "User organizations"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_Vec_OrganizationResponse"}
        "401":
          description: "Not authenticated"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "getAllForUser"
    post:
      tags:
        - "Organizations"
      operationId: "create_organization"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/CreateOrganizationRequest"}
        required: true
      responses:
        "201":
          description: "Organization created successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_OrganizationResponse"}
        "400":
          description: "Invalid input"
        "401":
          description: "Not authenticated"
        "403":
          description: "Email verification required"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "create"
  "/api/v0/organizations/by-domain":
    get:
      tags:
        - "Organizations"
      operationId: "find_organizations_by_email_domain"
      parameters:
        - name: "email"
          in: "query"
          description: "Email address to find organizations for"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "Organizations found for email domain"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_Vec_OrganizationByDomainResponse"}
        "400":
          description: "Invalid email format"
  "/api/v0/organizations/join":
    post:
      tags:
        - "Organizations"
      operationId: "join_organization"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/JoinOrganizationRequest"}
        required: true
      responses:
        "200":
          description: "Successfully joined organization"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_String"}
        "400":
          description: "Invalid input or already a member"
        "401":
          description: "Not authenticated"
        "403":
          description: "Domain-based joining not allowed or email verification required"
        "404":
          description: "Organization not found"
      security:
        - blackbox_auth_token: []
  "/api/v0/organizations/{org_id}":
    get:
      tags:
        - "Organizations"
      operationId: "get_organization"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      responses:
        "200":
          description: "Organization details"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_OrganizationResponse"}
        "401":
          description: "Not authenticated"
        "403":
          description: "Access denied to organization"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "get"
  "/api/v0/organizations/{org_id}/accept-invitation":
    post:
      tags:
        - "Organizations"
      operationId: "accept_invitation"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      responses:
        "200":
          description: "Invitation accepted successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_String"}
        "400":
          description: "No pending invitation found"
        "401":
          description: "Not authenticated"
        "403":
          description: "Email not verified"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "acceptInvitation"
  "/api/v0/organizations/{org_id}/analytics":
    get:
      tags:
        - "Analytics"
      operationId: "get_organization_analytics"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "from_date"
          in: "query"
          description: "Start date for analytics (ISO 8601)"
          required: false
          schema:
            type: "string"
        - name: "to_date"
          in: "query"
          description: "End date for analytics (ISO 8601)"
          required: false
          schema:
            type: "string"
      responses:
        "200":
          description: "Organization analytics retrieved successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_OrganizationAnalytics"}
        "401":
          description: "Not authenticated"
        "403":
          description: "Access denied to organization"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "get"
  "/api/v0/organizations/{org_id}/analytics/agents":
    get:
      tags:
        - "Analytics"
      operationId: "get_agent_analytics"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "from_date"
          in: "query"
          description: "Start date for analytics (ISO 8601)"
          required: false
          schema:
            type: "string"
        - name: "to_date"
          in: "query"
          description: "End date for analytics (ISO 8601)"
          required: false
          schema:
            type: "string"
      responses:
        "200":
          description: "Agent analytics retrieved successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_AgentAnalytics"}
        "401":
          description: "Not authenticated"
        "403":
          description: "Access denied to organization"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "getAgents"
  "/api/v0/organizations/{org_id}/analytics/knowledge-base":
    get:
      tags:
        - "Analytics"
      operationId: "get_knowledge_base_analytics"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      responses:
        "200":
          description: "Knowledge base statistics retrieved successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_KnowledgeBaseStats"}
        "401":
          description: "Not authenticated"
        "403":
          description: "Access denied to organization"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "getKnowledgeBase"
  "/api/v0/organizations/{org_id}/analytics/macros":
    get:
      tags:
        - "Analytics"
      operationId: "get_macro_analytics"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      responses:
        "200":
          description: "Macro usage statistics retrieved successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_MacroUsageStats"}
        "401":
          description: "Not authenticated"
        "403":
          description: "Access denied to organization"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "getMacros"
  "/api/v0/organizations/{org_id}/analytics/system":
    get:
      tags:
        - "Analytics"
      operationId: "get_system_analytics"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "from_date"
          in: "query"
          description: "Start date for analytics (ISO 8601)"
          required: false
          schema:
            type: "string"
        - name: "to_date"
          in: "query"
          description: "End date for analytics (ISO 8601)"
          required: false
          schema:
            type: "string"
      responses:
        "200":
          description: "System usage analytics retrieved successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_SystemUsage"}
        "401":
          description: "Not authenticated"
        "403":
          description: "Access denied to organization"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "getSystem"
  "/api/v0/organizations/{org_id}/analytics/tickets":
    get:
      tags:
        - "Analytics"
      operationId: "get_ticket_analytics"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "from_date"
          in: "query"
          description: "Start date for analytics (ISO 8601)"
          required: false
          schema:
            type: "string"
        - name: "to_date"
          in: "query"
          description: "End date for analytics (ISO 8601)"
          required: false
          schema:
            type: "string"
      responses:
        "200":
          description: "Ticket analytics retrieved successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_TicketAnalytics"}
        "401":
          description: "Not authenticated"
        "403":
          description: "Access denied to organization"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "getTickets"
  "/api/v0/organizations/{org_id}/analytics/trends":
    get:
      tags:
        - "Analytics"
      operationId: "get_trend_analytics"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "from_date"
          in: "query"
          description: "Start date for trends (ISO 8601)"
          required: false
          schema:
            type: "string"
        - name: "to_date"
          in: "query"
          description: "End date for trends (ISO 8601)"
          required: false
          schema:
            type: "string"
        - name: "metric"
          in: "query"
          description: "Metric to analyze (tickets, messages, events)"
          required: false
          schema:
            type: "string"
        - name: "interval"
          in: "query"
          description: "Time interval (daily, weekly, monthly)"
          required: false
          schema:
            type: "string"
      responses:
        "200":
          description: "Trend data retrieved successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_TimeSeriesData"}
        "401":
          description: "Not authenticated"
        "403":
          description: "Access denied to organization"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "getTrends"
  "/api/v0/organizations/{org_id}/automation/execute":
    post:
      tags:
        - "Automation"
      operationId: "execute_automation_rules"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "trigger"
          in: "query"
          description: "Trigger type to execute"
          required: true
          schema:
            type: "string"
        - name: "ticket_id"
          in: "query"
          description: "Ticket ID for context"
          required: false
          schema:
            type: "string"
            format: "uuid"
        - name: "user_id"
          in: "query"
          description: "User ID for context"
          required: false
          schema:
            type: "string"
            format: "uuid"
        - name: "csat_score"
          in: "query"
          description: "CSAT score for context"
          required: false
          schema:
            type: "integer"
            format: "int32"
      responses:
        "200":
          description: "Automation rules executed successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_Vec_AutomationExecution"}
        "400":
          description: "Invalid request data"
        "401":
          description: "Not authenticated"
        "403":
          description: "Access denied to organization"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "execute"
  "/api/v0/organizations/{org_id}/automation/rules":
    get:
      tags:
        - "Automation"
      operationId: "list_automation_rules"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "enabled"
          in: "query"
          description: "Filter by enabled status"
          required: false
          schema:
            type: "boolean"
        - name: "trigger"
          in: "query"
          description: "Filter by trigger type"
          required: false
          schema:
            type: "string"
        - name: "name_search"
          in: "query"
          description: "Search by name"
          required: false
          schema:
            type: "string"
        - name: "page"
          in: "query"
          description: "Page number"
          required: false
          schema:
            type: "integer"
            format: "int64"
            minimum: 0
        - name: "per_page"
          in: "query"
          description: "Items per page"
          required: false
          schema:
            type: "integer"
            format: "int64"
            minimum: 0
      responses:
        "200":
          description: "Automation rules retrieved successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_Vec_AutomationRuleResponse"}
        "401":
          description: "Not authenticated"
        "403":
          description: "Access denied to organization"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "list"
    post:
      tags:
        - "Automation"
      operationId: "create_automation_rule"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/CreateAutomationRuleRequest"}
        required: true
      responses:
        "201":
          description: "Automation rule created successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_AutomationRuleResponse"}
        "400":
          description: "Invalid request data"
        "401":
          description: "Not authenticated"
        "403":
          description: "Access denied to organization"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "create"
  "/api/v0/organizations/{org_id}/automation/rules/{rule_id}":
    get:
      tags:
        - "Automation"
      operationId: "get_automation_rule"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "rule_id"
          in: "path"
          description: "Automation rule ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      responses:
        "200":
          description: "Automation rule retrieved successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_AutomationRuleResponse"}
        "401":
          description: "Not authenticated"
        "403":
          description: "Access denied to organization"
        "404":
          description: "Automation rule not found"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "get"
    put:
      tags:
        - "Automation"
      operationId: "update_automation_rule"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "rule_id"
          in: "path"
          description: "Automation rule ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/UpdateAutomationRuleRequest"}
        required: true
      responses:
        "200":
          description: "Automation rule updated successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_AutomationRuleResponse"}
        "400":
          description: "Invalid request data"
        "401":
          description: "Not authenticated"
        "403":
          description: "Access denied to organization"
        "404":
          description: "Automation rule not found"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "update"
    delete:
      tags:
        - "Automation"
      operationId: "delete_automation_rule"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "rule_id"
          in: "path"
          description: "Automation rule ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      responses:
        "200":
          description: "Automation rule deleted successfully"
        "401":
          description: "Not authenticated"
        "403":
          description: "Access denied to organization"
        "404":
          description: "Automation rule not found"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "deleteRule"
  "/api/v0/organizations/{org_id}/automation/stats":
    get:
      tags:
        - "Automation"
      operationId: "get_automation_stats"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      responses:
        "200":
          description: "Automation statistics retrieved successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_AutomationStats"}
        "401":
          description: "Not authenticated"
        "403":
          description: "Access denied to organization"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "getStats"
  "/api/v0/organizations/{org_id}/events":
    get:
      tags:
        - "Event Logs"
      operationId: "list_events"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "page"
          in: "query"
          description: "Page number (default: 1)"
          required: false
          schema:
            type: "integer"
            format: "int64"
            minimum: 0
        - name: "per_page"
          in: "query"
          description: "Items per page (default: 20, max: 100)"
          required: false
          schema:
            type: "integer"
            format: "int64"
            minimum: 0
        - name: "event_type"
          in: "query"
          description: "Filter by event type"
          required: false
          schema:
            type: "string"
        - name: "user_id"
          in: "query"
          description: "Filter by user ID"
          required: false
          schema:
            type: "string"
            format: "uuid"
        - name: "ticket_id"
          in: "query"
          description: "Filter by ticket ID"
          required: false
          schema:
            type: "string"
            format: "uuid"
        - name: "from_date"
          in: "query"
          description: "Filter events from date (ISO 8601)"
          required: false
          schema:
            type: "string"
        - name: "to_date"
          in: "query"
          description: "Filter events to date (ISO 8601)"
          required: false
          schema:
            type: "string"
      responses:
        "200":
          description: "Events retrieved successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_Vec_EventLogResponse"}
        "401":
          description: "Not authenticated"
        "403":
          description: "Access denied to organization"
      security:
        - blackbox_auth_token: []
      x-speakeasy-group: "eventLogs"
      x-speakeasy-name-override: "list"
    post:
      tags:
        - "Event Logs"
      operationId: "create_event"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/CreateEventRequest"}
        required: true
      responses:
        "201":
          description: "Event created successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_EventLogResponse"}
        "400":
          description: "Invalid input"
        "401":
          description: "Not authenticated"
        "403":
          description: "Access denied to organization"
      security:
        - blackbox_auth_token: []
      x-speakeasy-group: "eventLogs"
      x-speakeasy-name-override: "create"
  "/api/v0/organizations/{org_id}/events/export":
    get:
      tags:
        - "Event Logs"
      operationId: "export_events"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "format"
          in: "query"
          description: "Export format (csv)"
          required: false
          schema:
            type: "string"
        - name: "event_type"
          in: "query"
          description: "Filter by event type"
          required: false
          schema:
            type: "string"
        - name: "user_id"
          in: "query"
          description: "Filter by user ID"
          required: false
          schema:
            type: "string"
            format: "uuid"
        - name: "ticket_id"
          in: "query"
          description: "Filter by ticket ID"
          required: false
          schema:
            type: "string"
            format: "uuid"
        - name: "from_date"
          in: "query"
          description: "Filter events from date (ISO 8601)"
          required: false
          schema:
            type: "string"
        - name: "to_date"
          in: "query"
          description: "Filter events to date (ISO 8601)"
          required: false
          schema:
            type: "string"
      responses:
        "200":
          description: "Events exported successfully"
          content:
            "text/csv": {}
        "401":
          description: "Not authenticated"
        "403":
          description: "Access denied to organization"
      security:
        - blackbox_auth_token: []
      x-speakeasy-group: "eventLogs"
      x-speakeasy-name-override: "export"
  "/api/v0/organizations/{org_id}/events/stats":
    get:
      tags:
        - "Event Logs"
      operationId: "get_event_stats"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      responses:
        "200":
          description: "Event statistics retrieved successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_EventLogStats"}
        "401":
          description: "Not authenticated"
        "403":
          description: "Access denied to organization"
      security:
        - blackbox_auth_token: []
      x-speakeasy-group: "eventLogs"
      x-speakeasy-name-override: "getStats"
  "/api/v0/organizations/{org_id}/events/{event_id}":
    get:
      tags:
        - "Event Logs"
      operationId: "get_event"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "event_id"
          in: "path"
          description: "Event ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      responses:
        "200":
          description: "Event retrieved successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_EventLogResponse"}
        "401":
          description: "Not authenticated"
        "403":
          description: "Access denied to organization"
        "404":
          description: "Event not found"
      security:
        - blackbox_auth_token: []
      x-speakeasy-group: "eventLogs"
      x-speakeasy-name-override: "get"
  "/api/v0/organizations/{org_id}/invite":
    post:
      tags:
        - "Organizations"
      operationId: "invite_user"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/InviteUserRequest"}
        required: true
      responses:
        "200":
          description: "User invited successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_String"}
        "400":
          description: "Invalid input or user already member"
        "401":
          description: "Not authenticated"
        "403":
          description: "Organization admin access required"
        "404":
          description: "User not found"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "inviteUser"
  "/api/v0/organizations/{org_id}/knowledge-base/articles":
    get:
      tags:
        - "Knowledge Base"
      operationId: "list_articles"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "public"
          in: "query"
          description: "Filter by public visibility"
          required: false
          schema:
            type: "boolean"
        - name: "author_id"
          in: "query"
          description: "Filter by author user ID"
          required: false
          schema:
            type: "string"
        - name: "search"
          in: "query"
          description: "Search in title and content"
          required: false
          schema:
            type: "string"
        - name: "page"
          in: "query"
          description: "Page number"
          required: false
          schema:
            type: "integer"
            format: "int64"
            minimum: 0
        - name: "per_page"
          in: "query"
          description: "Items per page"
          required: false
          schema:
            type: "integer"
            format: "int64"
            minimum: 0
      responses:
        "200":
          description: "List of articles"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_Vec_ArticleResponse"}
        "403":
          description: "Access denied to organization"
      security:
        - blackbox_auth_token: []
      x-speakeasy-group: "knowledgeBase"
      x-speakeasy-name-override: "listArticles"
    post:
      tags:
        - "Knowledge Base"
      operationId: "create_article"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/CreateArticleRequest"}
        required: true
      responses:
        "201":
          description: "Article created successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_ArticleResponse"}
        "400":
          description: "Invalid input"
        "401":
          description: "Not authenticated"
        "403":
          description: "Access denied to organization"
      security:
        - blackbox_auth_token: []
      x-speakeasy-group: "knowledgeBase"
      x-speakeasy-name-override: "createArticle"
  "/api/v0/organizations/{org_id}/knowledge-base/articles/{article_id}":
    get:
      tags:
        - "Knowledge Base"
      operationId: "get_article"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "article_id"
          in: "path"
          description: "Article ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      responses:
        "200":
          description: "Article details"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_ArticleResponse"}
        "403":
          description: "Access denied to organization"
        "404":
          description: "Article not found"
      security:
        - blackbox_auth_token: []
      x-speakeasy-group: "knowledgeBase"
      x-speakeasy-name-override: "getArticle"
    put:
      tags:
        - "Knowledge Base"
      operationId: "update_article"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "article_id"
          in: "path"
          description: "Article ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/UpdateArticleRequest"}
        required: true
      responses:
        "200":
          description: "Article updated successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_ArticleResponse"}
        "403":
          description: "Access denied to organization or insufficient permissions"
        "404":
          description: "Article not found"
      security:
        - blackbox_auth_token: []
      x-speakeasy-group: "knowledgeBase"
      x-speakeasy-name-override: "updateArticle"
    delete:
      tags:
        - "Knowledge Base"
      operationId: "delete_article"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "article_id"
          in: "path"
          description: "Article ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      responses:
        "204":
          description: "Article deleted successfully"
        "403":
          description: "Access denied to organization or insufficient permissions"
        "404":
          description: "Article not found"
      security:
        - blackbox_auth_token: []
      x-speakeasy-group: "knowledgeBase"
      x-speakeasy-name-override: "deleteArticle"
  "/api/v0/organizations/{org_id}/knowledge-base/public":
    get:
      tags:
        - "Knowledge Base"
      operationId: "get_public_articles"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "page"
          in: "query"
          description: "Page number"
          required: false
          schema:
            type: "integer"
            format: "int64"
            minimum: 0
        - name: "per_page"
          in: "query"
          description: "Items per page"
          required: false
          schema:
            type: "integer"
            format: "int64"
            minimum: 0
      responses:
        "200":
          description: "Public articles"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_Vec_ArticleResponse"}
        "403":
          description: "Access denied to organization"
      security:
        - blackbox_auth_token: []
      x-speakeasy-group: "knowledgeBase"
      x-speakeasy-name-override: "getPublicArticles"
  "/api/v0/organizations/{org_id}/knowledge-base/search":
    get:
      tags:
        - "Knowledge Base"
      operationId: "search_public_articles"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "q"
          in: "query"
          description: "Search query"
          required: true
          schema:
            type: "string"
        - name: "page"
          in: "query"
          description: "Page number"
          required: false
          schema:
            type: "integer"
            format: "int64"
            minimum: 0
        - name: "per_page"
          in: "query"
          description: "Items per page"
          required: false
          schema:
            type: "integer"
            format: "int64"
            minimum: 0
      responses:
        "200":
          description: "Search results"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_Vec_ArticleResponse"}
        "403":
          description: "Access denied to organization"
      security:
        - blackbox_auth_token: []
      x-speakeasy-group: "knowledgeBase"
      x-speakeasy-name-override: "searchPublicArticles"
  "/api/v0/organizations/{org_id}/macros":
    get:
      tags:
        - "Macros"
      operationId: "list_macros"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "page"
          in: "query"
          description: "Page number (default: 1)"
          required: false
          schema:
            type: "integer"
            format: "int64"
            minimum: 0
        - name: "per_page"
          in: "query"
          description: "Items per page (default: 20, max: 100)"
          required: false
          schema:
            type: "integer"
            format: "int64"
            minimum: 0
        - name: "search"
          in: "query"
          description: "Search in name, description, or content"
          required: false
          schema:
            type: "string"
        - name: "created_by"
          in: "query"
          description: "Filter by creator user ID"
          required: false
          schema:
            type: "string"
            format: "uuid"
      responses:
        "200":
          description: "Macros retrieved successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_Vec_MacroResponse"}
        "401":
          description: "Not authenticated"
        "403":
          description: "Access denied to organization"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "list"
    post:
      tags:
        - "Macros"
      operationId: "create_macro"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/CreateMacroRequest"}
        required: true
      responses:
        "201":
          description: "Macro created successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_MacroResponse"}
        "400":
          description: "Invalid input"
        "401":
          description: "Not authenticated"
        "403":
          description: "Access denied to organization"
        "409":
          description: "Macro name already exists"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "create"
  "/api/v0/organizations/{org_id}/macros/popular":
    get:
      tags:
        - "Macros"
      operationId: "get_popular_macros"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "limit"
          in: "query"
          description: "Maximum number of macros to return (default: 10, max: 50)"
          required: false
          schema:
            type: "integer"
            format: "int64"
            minimum: 0
      responses:
        "200":
          description: "Popular macros retrieved successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_Vec_MacroResponse"}
        "401":
          description: "Not authenticated"
        "403":
          description: "Access denied to organization"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "getPopular"
  "/api/v0/organizations/{org_id}/macros/render":
    post:
      tags:
        - "Macros"
      operationId: "render_macro_template"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/MacroTemplateRequest"}
        required: true
      responses:
        "200":
          description: "Macro template rendered successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_MacroTemplateResponse"}
        "400":
          description: "Invalid input"
        "401":
          description: "Not authenticated"
        "403":
          description: "Access denied to organization"
        "404":
          description: "Macro not found"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "render"
  "/api/v0/organizations/{org_id}/macros/{macro_id}":
    get:
      tags:
        - "Macros"
      operationId: "get_macro"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "macro_id"
          in: "path"
          description: "Macro ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      responses:
        "200":
          description: "Macro retrieved successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_MacroResponse"}
        "401":
          description: "Not authenticated"
        "403":
          description: "Access denied to organization"
        "404":
          description: "Macro not found"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "get"
    put:
      tags:
        - "Macros"
      operationId: "update_macro"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "macro_id"
          in: "path"
          description: "Macro ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/UpdateMacroRequest"}
        required: true
      responses:
        "200":
          description: "Macro updated successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_MacroResponse"}
        "400":
          description: "Invalid input"
        "401":
          description: "Not authenticated"
        "403":
          description: "Access denied to organization"
        "404":
          description: "Macro not found"
        "409":
          description: "Macro name already exists"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "update"
    delete:
      tags:
        - "Macros"
      operationId: "delete_macro"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "macro_id"
          in: "path"
          description: "Macro ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      responses:
        "200":
          description: "Macro deleted successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_String"}
        "401":
          description: "Not authenticated"
        "403":
          description: "Access denied to organization"
        "404":
          description: "Macro not found"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "delete"
  "/api/v0/organizations/{org_id}/members":
    get:
      tags:
        - "Organizations"
      operationId: "get_members"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      responses:
        "200":
          description: "Organization members"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_Vec_MembershipResponse"}
        "401":
          description: "Not authenticated"
        "403":
          description: "Access denied to organization"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "getMembers"
  "/api/v0/organizations/{org_id}/members/{member_id}":
    put:
      tags:
        - "Organizations"
      operationId: "update_membership"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "member_id"
          in: "path"
          description: "Member user ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/UpdateMembershipRequest"}
        required: true
      responses:
        "200":
          description: "Membership updated successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_String"}
        "401":
          description: "Not authenticated"
        "403":
          description: "Organization admin access required"
        "404":
          description: "Member not found"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "updateMembership"
    delete:
      tags:
        - "Organizations"
      operationId: "remove_member"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "member_id"
          in: "path"
          description: "Member user ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      responses:
        "200":
          description: "Member removed successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_String"}
        "400":
          description: "Cannot remove last admin"
        "401":
          description: "Not authenticated"
        "403":
          description: "Organization admin access required"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "removeMember"
  "/api/v0/organizations/{org_id}/messages/{message_id}":
    get:
      tags:
        - "Messages"
      operationId: "get_message"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "message_id"
          in: "path"
          description: "Message ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      responses:
        "200":
          description: "Message details"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_MessageResponse"}
        "403":
          description: "Access denied to organization"
        "404":
          description: "Message not found"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "get"
    delete:
      tags:
        - "Messages"
      operationId: "delete_message"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "message_id"
          in: "path"
          description: "Message ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      responses:
        "204":
          description: "Message deleted successfully"
        "403":
          description: "Access denied to organization or insufficient permissions"
        "404":
          description: "Message not found"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "delete"
  "/api/v0/organizations/{org_id}/settings":
    get:
      tags:
        - "Organizations"
      operationId: "get_all_organization_settings"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      responses:
        "200":
          description: "All organization settings"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_Vec_OrganizationSettingResponse"}
        "403":
          description: "Access denied to organization"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "getSettings"
    post:
      tags:
        - "Organizations"
      operationId: "set_organization_setting"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/SetOrganizationSettingRequest"}
        required: true
      responses:
        "201":
          description: "Setting created/updated successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_OrganizationSettingResponse"}
        "400":
          description: "Invalid input"
        "403":
          description: "Organization admin access required"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "setSetting"
  "/api/v0/organizations/{org_id}/settings/{key}":
    get:
      tags:
        - "Organizations"
      operationId: "get_organization_setting"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "key"
          in: "path"
          description: "Setting key"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "Setting value"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_Option_OrganizationSettingResponse"}
        "403":
          description: "Access denied to organization"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "getSetting"
    delete:
      tags:
        - "Organizations"
      operationId: "delete_organization_setting"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "key"
          in: "path"
          description: "Setting key"
          required: true
          schema:
            type: "string"
      responses:
        "204":
          description: "Setting deleted successfully"
        "403":
          description: "Organization admin access required"
        "404":
          description: "Setting not found"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "deleteSetting"
  "/api/v0/organizations/{org_id}/surveys":
    get:
      tags:
        - "CSAT Surveys"
      operationId: "list_surveys"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "ticket_id"
          in: "query"
          description: "Filter by ticket ID"
          required: false
          schema:
            type: "string"
            format: "uuid"
        - name: "user_id"
          in: "query"
          description: "Filter by user ID"
          required: false
          schema:
            type: "string"
            format: "uuid"
        - name: "min_score"
          in: "query"
          description: "Minimum score filter"
          required: false
          schema:
            type: "integer"
            format: "int32"
        - name: "max_score"
          in: "query"
          description: "Maximum score filter"
          required: false
          schema:
            type: "integer"
            format: "int32"
        - name: "has_comment"
          in: "query"
          description: "Filter by comment presence"
          required: false
          schema:
            type: "boolean"
        - name: "from_date"
          in: "query"
          description: "Start date (ISO 8601)"
          required: false
          schema:
            type: "string"
        - name: "to_date"
          in: "query"
          description: "End date (ISO 8601)"
          required: false
          schema:
            type: "string"
        - name: "page"
          in: "query"
          description: "Page number"
          required: false
          schema:
            type: "integer"
            format: "int64"
            minimum: 0
        - name: "per_page"
          in: "query"
          description: "Items per page"
          required: false
          schema:
            type: "integer"
            format: "int64"
            minimum: 0
      responses:
        "200":
          description: "Surveys retrieved successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_Vec_SurveyResponse"}
        "401":
          description: "Not authenticated"
        "403":
          description: "Access denied to organization"
      security:
        - blackbox_auth_token: []
      x-speakeasy-group: "csatSurveys"
      x-speakeasy-name-override: "list"
    post:
      tags:
        - "CSAT Surveys"
      operationId: "submit_survey"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/SubmitSurveyRequest"}
        required: true
      responses:
        "201":
          description: "Survey submitted successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_SurveyResponse"}
        "400":
          description: "Invalid request data"
        "401":
          description: "Not authenticated"
        "403":
          description: "Access denied to organization"
        "404":
          description: "Ticket not found"
        "409":
          description: "Survey already exists for this ticket"
      security:
        - blackbox_auth_token: []
      x-speakeasy-group: "csatSurveys"
      x-speakeasy-name-override: "submit"
  "/api/v0/organizations/{org_id}/surveys/analytics":
    get:
      tags:
        - "CSAT Surveys"
      operationId: "get_survey_analytics"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "from_date"
          in: "query"
          description: "Start date for analytics (ISO 8601)"
          required: false
          schema:
            type: "string"
        - name: "to_date"
          in: "query"
          description: "End date for analytics (ISO 8601)"
          required: false
          schema:
            type: "string"
      responses:
        "200":
          description: "Survey analytics retrieved successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_CSATAnalytics"}
        "401":
          description: "Not authenticated"
        "403":
          description: "Access denied to organization"
      security:
        - blackbox_auth_token: []
      x-speakeasy-group: "csatSurveys"
      x-speakeasy-name-override: "getAnalytics"
  "/api/v0/organizations/{org_id}/surveys/export":
    get:
      tags:
        - "CSAT Surveys"
      operationId: "export_surveys"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "ticket_id"
          in: "query"
          description: "Filter by ticket ID"
          required: false
          schema:
            type: "string"
            format: "uuid"
        - name: "user_id"
          in: "query"
          description: "Filter by user ID"
          required: false
          schema:
            type: "string"
            format: "uuid"
        - name: "min_score"
          in: "query"
          description: "Minimum score filter"
          required: false
          schema:
            type: "integer"
            format: "int32"
        - name: "max_score"
          in: "query"
          description: "Maximum score filter"
          required: false
          schema:
            type: "integer"
            format: "int32"
        - name: "has_comment"
          in: "query"
          description: "Filter by comment presence"
          required: false
          schema:
            type: "boolean"
        - name: "from_date"
          in: "query"
          description: "Start date (ISO 8601)"
          required: false
          schema:
            type: "string"
        - name: "to_date"
          in: "query"
          description: "End date (ISO 8601)"
          required: false
          schema:
            type: "string"
        - name: "page"
          in: "query"
          description: "Page number"
          required: false
          schema:
            type: "integer"
            format: "int64"
            minimum: 0
        - name: "per_page"
          in: "query"
          description: "Items per page"
          required: false
          schema:
            type: "integer"
            format: "int64"
            minimum: 0
      responses:
        "200":
          description: "Survey data exported successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_SurveyExport"}
        "401":
          description: "Not authenticated"
        "403":
          description: "Access denied to organization"
      security:
        - blackbox_auth_token: []
      x-speakeasy-group: "csatSurveys"
      x-speakeasy-name-override: "export"
  "/api/v0/organizations/{org_id}/surveys/{survey_id}":
    get:
      tags:
        - "CSAT Surveys"
      operationId: "get_survey"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "survey_id"
          in: "path"
          description: "Survey ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      responses:
        "200":
          description: "Survey retrieved successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_SurveyResponse"}
        "401":
          description: "Not authenticated"
        "403":
          description: "Access denied to organization"
        "404":
          description: "Survey not found"
      security:
        - blackbox_auth_token: []
      x-speakeasy-group: "csatSurveys"
      x-speakeasy-name-override: "get"
    put:
      tags:
        - "CSAT Surveys"
      operationId: "update_survey"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "survey_id"
          in: "path"
          description: "Survey ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/UpdateSurveyRequest"}
        required: true
      responses:
        "200":
          description: "Survey updated successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_SurveyResponse"}
        "400":
          description: "Invalid request data"
        "401":
          description: "Not authenticated"
        "403":
          description: "Access denied to survey"
        "404":
          description: "Survey not found"
      security:
        - blackbox_auth_token: []
      x-speakeasy-group: "csatSurveys"
      x-speakeasy-name-override: "update"
    delete:
      tags:
        - "CSAT Surveys"
      operationId: "delete_survey"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "survey_id"
          in: "path"
          description: "Survey ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      responses:
        "200":
          description: "Survey deleted successfully"
        "401":
          description: "Not authenticated"
        "403":
          description: "Access denied to survey"
        "404":
          description: "Survey not found"
      security:
        - blackbox_auth_token: []
      x-speakeasy-group: "csatSurveys"
      x-speakeasy-name-override: "delete"
  "/api/v0/organizations/{org_id}/tags":
    get:
      tags:
        - "Tags"
      operationId: "list_tags"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "page"
          in: "query"
          description: "Page number"
          required: false
          schema:
            type: "integer"
            format: "int64"
            minimum: 0
        - name: "per_page"
          in: "query"
          description: "Items per page"
          required: false
          schema:
            type: "integer"
            format: "int64"
            minimum: 0
      responses:
        "200":
          description: "List of tags"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_Vec_TagResponse"}
        "403":
          description: "Access denied to organization"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "list"
    post:
      tags:
        - "Tags"
      operationId: "create_tag"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/CreateTagRequest"}
        required: true
      responses:
        "201":
          description: "Tag created successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_TagResponse"}
        "400":
          description: "Invalid input or tag name already exists"
        "401":
          description: "Not authenticated"
        "403":
          description: "Access denied to organization"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "create"
  "/api/v0/organizations/{org_id}/tags/popular":
    get:
      tags:
        - "Tags"
      operationId: "get_popular_tags"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "limit"
          in: "query"
          description: "Maximum number of tags to return"
          required: false
          schema:
            type: "integer"
            format: "int64"
            minimum: 0
      responses:
        "200":
          description: "Popular tags by usage"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_Vec_TagResponse"}
        "403":
          description: "Access denied to organization"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "getPopular"
  "/api/v0/organizations/{org_id}/tags/{tag_id}":
    get:
      tags:
        - "Tags"
      operationId: "get_tag"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "tag_id"
          in: "path"
          description: "Tag ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      responses:
        "200":
          description: "Tag details"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_TagResponse"}
        "403":
          description: "Access denied to organization"
        "404":
          description: "Tag not found"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "get"
    put:
      tags:
        - "Tags"
      operationId: "update_tag"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "tag_id"
          in: "path"
          description: "Tag ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/UpdateTagRequest"}
        required: true
      responses:
        "200":
          description: "Tag updated successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_TagResponse"}
        "400":
          description: "Tag name already exists"
        "403":
          description: "Access denied to organization or insufficient permissions"
        "404":
          description: "Tag not found"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "update"
    delete:
      tags:
        - "Tags"
      operationId: "delete_tag"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "tag_id"
          in: "path"
          description: "Tag ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      responses:
        "204":
          description: "Tag deleted successfully"
        "403":
          description: "Access denied to organization or insufficient permissions"
        "404":
          description: "Tag not found"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "delete"
  "/api/v0/organizations/{org_id}/tags/{tag_id}/tickets":
    get:
      tags:
        - "Tags"
      operationId: "get_tag_with_tickets"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "tag_id"
          in: "path"
          description: "Tag ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "page"
          in: "query"
          description: "Page number"
          required: false
          schema:
            type: "integer"
            format: "int64"
            minimum: 0
        - name: "per_page"
          in: "query"
          description: "Items per page"
          required: false
          schema:
            type: "integer"
            format: "int64"
            minimum: 0
      responses:
        "200":
          description: "Tag with associated tickets"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_TagWithTicketsResponse"}
        "403":
          description: "Access denied to organization"
        "404":
          description: "Tag not found"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "getWithTickets"
  "/api/v0/organizations/{org_id}/tickets":
    get:
      tags:
        - "Tickets"
      summary: "List tickets with filtering"
      description: "Retrieves a paginated list of tickets with optional filtering by status, priority, assignment, creator, and tags. Results are ordered by creation date (newest first)."
      operationId: "list_tickets"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "status"
          in: "query"
          description: "Filter by ticket status (open, in_progress, resolved, closed)"
          required: false
          schema:
            type: "string"
        - name: "priority"
          in: "query"
          description: "Filter by priority level (low, medium, high, urgent)"
          required: false
          schema:
            type: "string"
        - name: "assigned_to"
          in: "query"
          description: "Filter by assigned user ID"
          required: false
          schema:
            type: "string"
        - name: "created_by"
          in: "query"
          description: "Filter by creator user ID"
          required: false
          schema:
            type: "string"
        - name: "tag_ids"
          in: "query"
          description: "Filter by tag IDs (comma-separated UUIDs)"
          required: false
          schema:
            type: "string"
        - name: "page"
          in: "query"
          description: "Page number (default: 1)"
          required: false
          schema:
            type: "integer"
            format: "int64"
            minimum: 0
        - name: "per_page"
          in: "query"
          description: "Items per page (default: 20, max: 100)"
          required: false
          schema:
            type: "integer"
            format: "int64"
            minimum: 0
      responses:
        "200":
          description: "List of tickets retrieved successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_Vec_TicketResponse"}
        "400":
          description: "Invalid filter parameters"
        "401":
          description: "Authentication required"
        "403":
          description: "Access denied to organization"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "list"
    post:
      tags:
        - "Tickets"
      summary: "Create a new support ticket"
      description: "Creates a new support ticket in the specified organization. The ticket will be assigned to the authenticated user as the creator and can optionally be assigned to another team member."
      operationId: "create_ticket"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/CreateTicketRequest"}
        required: true
      responses:
        "201":
          description: "Ticket created successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_TicketResponse"}
        "400":
          description: "Invalid input data or validation error"
        "401":
          description: "Authentication required"
        "403":
          description: "Access denied to organization"
        "422":
          description: "Validation error in request body"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "create"
  "/api/v0/organizations/{org_id}/tickets/{ticket_id}":
    get:
      tags:
        - "Tickets"
      summary: "Get ticket details"
      description: "Retrieves detailed information about a specific ticket including its current status, assignment, tags, and metadata."
      operationId: "get_ticket"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "ticket_id"
          in: "path"
          description: "Ticket ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      responses:
        "200":
          description: "Ticket details retrieved successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_TicketResponse"}
        "401":
          description: "Authentication required"
        "403":
          description: "Access denied to organization"
        "404":
          description: "Ticket not found"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "get"
    put:
      tags:
        - "Tickets"
      operationId: "update_ticket"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "ticket_id"
          in: "path"
          description: "Ticket ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/UpdateTicketRequest"}
        required: true
      responses:
        "200":
          description: "Ticket updated successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_TicketResponse"}
        "403":
          description: "Access denied to organization"
        "404":
          description: "Ticket not found"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "update"
    delete:
      tags:
        - "Tickets"
      operationId: "delete_ticket"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "ticket_id"
          in: "path"
          description: "Ticket ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      responses:
        "204":
          description: "Ticket deleted successfully"
        "403":
          description: "Access denied to organization"
        "404":
          description: "Ticket not found"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "delete"
  "/api/v0/organizations/{org_id}/tickets/{ticket_id}/messages":
    get:
      tags:
        - "Messages"
      operationId: "list_ticket_messages"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "ticket_id"
          in: "path"
          description: "Ticket ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "channel"
          in: "query"
          description: "Filter by channel"
          required: false
          schema:
            type: "string"
        - name: "sender_id"
          in: "query"
          description: "Filter by sender user ID"
          required: false
          schema:
            type: "string"
        - name: "page"
          in: "query"
          description: "Page number"
          required: false
          schema:
            type: "integer"
            format: "int64"
            minimum: 0
        - name: "per_page"
          in: "query"
          description: "Items per page"
          required: false
          schema:
            type: "integer"
            format: "int64"
            minimum: 0
      responses:
        "200":
          description: "List of messages"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_Vec_MessageResponse"}
        "403":
          description: "Access denied to organization"
        "404":
          description: "Ticket not found"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "list"
    post:
      tags:
        - "Messages"
      operationId: "create_message"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "ticket_id"
          in: "path"
          description: "Ticket ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/CreateMessageRequest"}
        required: true
      responses:
        "201":
          description: "Message created successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_MessageResponse"}
        "400":
          description: "Invalid input"
        "401":
          description: "Not authenticated"
        "403":
          description: "Access denied to organization"
        "404":
          description: "Ticket not found"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "create"
  "/api/v0/organizations/{org_id}/tickets/{ticket_id}/messages/count":
    get:
      tags:
        - "Messages"
      operationId: "get_message_count"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "ticket_id"
          in: "path"
          description: "Ticket ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      responses:
        "200":
          description: "Message count"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_u64"}
        "403":
          description: "Access denied to organization"
        "404":
          description: "Ticket not found"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "count"
  "/api/v0/organizations/{org_id}/tickets/{ticket_id}/messages/latest":
    get:
      tags:
        - "Messages"
      operationId: "get_latest_message"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "ticket_id"
          in: "path"
          description: "Ticket ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      responses:
        "200":
          description: "Latest message"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_Option_MessageResponse"}
        "403":
          description: "Access denied to organization"
        "404":
          description: "Ticket not found"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "getLatest"
  "/api/v0/organizations/{org_id}/tickets/{ticket_id}/messages/search":
    get:
      tags:
        - "Messages"
      operationId: "search_messages"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "ticket_id"
          in: "path"
          description: "Ticket ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "q"
          in: "query"
          description: "Search query"
          required: true
          schema:
            type: "string"
        - name: "page"
          in: "query"
          description: "Page number"
          required: false
          schema:
            type: "integer"
            format: "int64"
            minimum: 0
        - name: "per_page"
          in: "query"
          description: "Items per page"
          required: false
          schema:
            type: "integer"
            format: "int64"
            minimum: 0
      responses:
        "200":
          description: "Search results"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_Vec_MessageResponse"}
        "403":
          description: "Access denied to organization"
        "404":
          description: "Ticket not found"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "search"
  "/api/v0/organizations/{org_id}/tickets/{ticket_id}/messages/{message_id}/attachments":
    get:
      tags:
        - "Attachments"
      operationId: "list_message_attachments"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "ticket_id"
          in: "path"
          description: "Ticket ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "message_id"
          in: "path"
          description: "Message ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      responses:
        "200":
          description: "Attachments retrieved successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_Vec_AttachmentResponse"}
        "401":
          description: "Not authenticated"
        "403":
          description: "Access denied"
        "404":
          description: "Message not found"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "list"
    post:
      tags:
        - "Attachments"
      operationId: "upload_attachments"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "ticket_id"
          in: "path"
          description: "Ticket ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "message_id"
          in: "path"
          description: "Message ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      requestBody:
        description: "Files to upload"
        content:
          "multipart/form-data": {}
        required: true
      responses:
        "201":
          description: "Files uploaded successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_UploadResponse"}
        "400":
          description: "Invalid input or file type"
        "401":
          description: "Not authenticated"
        "403":
          description: "Access denied"
        "404":
          description: "Message not found"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "upload"
  "/api/v0/organizations/{org_id}/tickets/{ticket_id}/messages/{message_id}/attachments/{attachment_id}":
    delete:
      tags:
        - "Attachments"
      operationId: "delete_attachment"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "ticket_id"
          in: "path"
          description: "Ticket ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "message_id"
          in: "path"
          description: "Message ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "attachment_id"
          in: "path"
          description: "Attachment ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      responses:
        "200":
          description: "Attachment deleted successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_String"}
        "401":
          description: "Not authenticated"
        "403":
          description: "Access denied"
        "404":
          description: "Attachment not found"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "delete"
  "/api/v0/organizations/{org_id}/tickets/{ticket_id}/tags":
    post:
      tags:
        - "Tickets"
      operationId: "add_tags_to_ticket"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "ticket_id"
          in: "path"
          description: "Ticket ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/TagManagementRequest"}
        required: true
      responses:
        "200":
          description: "Tags added successfully"
        "403":
          description: "Access denied to organization"
        "404":
          description: "Ticket not found"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "addTags"
    delete:
      tags:
        - "Tickets"
      operationId: "remove_tags_from_ticket"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "ticket_id"
          in: "path"
          description: "Ticket ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/TagManagementRequest"}
        required: true
      responses:
        "200":
          description: "Tags removed successfully"
        "403":
          description: "Access denied to organization"
        "404":
          description: "Ticket not found"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "removeTags"
  "/api/v0/organizations/{org_id}/webhooks":
    get:
      tags:
        - "Webhooks"
      operationId: "list_webhooks"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "enabled"
          in: "query"
          description: "Filter by enabled status"
          required: false
          schema:
            type: "boolean"
        - name: "event_type"
          in: "query"
          description: "Filter by event type"
          required: false
          schema:
            type: "string"
        - name: "name_search"
          in: "query"
          description: "Search by name"
          required: false
          schema:
            type: "string"
        - name: "url_search"
          in: "query"
          description: "Search by URL"
          required: false
          schema:
            type: "string"
        - name: "page"
          in: "query"
          description: "Page number"
          required: false
          schema:
            type: "integer"
            format: "int64"
            minimum: 0
        - name: "per_page"
          in: "query"
          description: "Items per page"
          required: false
          schema:
            type: "integer"
            format: "int64"
            minimum: 0
      responses:
        "200":
          description: "Webhooks retrieved successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_Vec_WebhookResponse"}
        "401":
          description: "Not authenticated"
        "403":
          description: "Access denied to organization"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "list"
    post:
      tags:
        - "Webhooks"
      operationId: "create_webhook"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/CreateWebhookRequest"}
        required: true
      responses:
        "201":
          description: "Webhook created successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_WebhookResponse"}
        "400":
          description: "Invalid request data"
        "401":
          description: "Not authenticated"
        "403":
          description: "Access denied to organization"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "create"
  "/api/v0/organizations/{org_id}/webhooks/events":
    get:
      tags:
        - "Webhooks"
      operationId: "list_webhook_events"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      responses:
        "200":
          description: "Available webhook events retrieved successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_Vec_String"}
        "401":
          description: "Not authenticated"
        "403":
          description: "Access denied to organization"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "listEvents"
  "/api/v0/organizations/{org_id}/webhooks/send":
    post:
      tags:
        - "Webhooks"
      operationId: "send_webhooks"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "event_type"
          in: "query"
          description: "Event type to trigger"
          required: true
          schema:
            type: "string"
        - name: "ticket_id"
          in: "query"
          description: "Ticket ID for context"
          required: false
          schema:
            type: "string"
            format: "uuid"
        - name: "user_id"
          in: "query"
          description: "User ID for context"
          required: false
          schema:
            type: "string"
            format: "uuid"
      responses:
        "200":
          description: "Webhooks sent successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_Vec_WebhookDelivery"}
        "400":
          description: "Invalid request data"
        "401":
          description: "Not authenticated"
        "403":
          description: "Access denied to organization"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "send"
  "/api/v0/organizations/{org_id}/webhooks/stats":
    get:
      tags:
        - "Webhooks"
      operationId: "get_webhook_stats"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      responses:
        "200":
          description: "Webhook statistics retrieved successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_WebhookStats"}
        "401":
          description: "Not authenticated"
        "403":
          description: "Access denied to organization"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "getStats"
  "/api/v0/organizations/{org_id}/webhooks/{webhook_id}":
    get:
      tags:
        - "Webhooks"
      operationId: "get_webhook"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "webhook_id"
          in: "path"
          description: "Webhook ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      responses:
        "200":
          description: "Webhook retrieved successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_WebhookResponse"}
        "401":
          description: "Not authenticated"
        "403":
          description: "Access denied to organization"
        "404":
          description: "Webhook not found"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "get"
    put:
      tags:
        - "Webhooks"
      operationId: "update_webhook"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "webhook_id"
          in: "path"
          description: "Webhook ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/UpdateWebhookRequest"}
        required: true
      responses:
        "200":
          description: "Webhook updated successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_WebhookResponse"}
        "400":
          description: "Invalid request data"
        "401":
          description: "Not authenticated"
        "403":
          description: "Access denied to organization"
        "404":
          description: "Webhook not found"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "update"
    delete:
      tags:
        - "Webhooks"
      operationId: "delete_webhook"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "webhook_id"
          in: "path"
          description: "Webhook ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      responses:
        "200":
          description: "Webhook deleted successfully"
        "401":
          description: "Not authenticated"
        "403":
          description: "Access denied to organization"
        "404":
          description: "Webhook not found"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "delete"
  "/api/v0/organizations/{org_id}/webhooks/{webhook_id}/test":
    post:
      tags:
        - "Webhooks"
      operationId: "test_webhook"
      parameters:
        - name: "org_id"
          in: "path"
          description: "Organization ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "webhook_id"
          in: "path"
          description: "Webhook ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/TestWebhookRequest"}
        required: true
      responses:
        "200":
          description: "Webhook test completed"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_WebhookTestResult"}
        "400":
          description: "Invalid request data"
        "401":
          description: "Not authenticated"
        "403":
          description: "Access denied to organization"
        "404":
          description: "Webhook not found"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "test"
  "/api/v0/users/account":
    delete:
      tags:
        - "Users"
      operationId: "delete_account"
      responses:
        "200":
          description: "Account deleted successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_String"}
        "400":
          description: "Cannot delete account"
        "401":
          description: "Not authenticated"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "deleteAccount"
  "/api/v0/users/api-keys":
    get:
      tags:
        - "API Keys"
      operationId: "list_api_keys"
      parameters:
        - name: "page"
          in: "query"
          description: "Page number (default: 1)"
          required: false
          schema:
            type: "integer"
            format: "int64"
            minimum: 0
        - name: "per_page"
          in: "query"
          description: "Items per page (default: 20, max: 100)"
          required: false
          schema:
            type: "integer"
            format: "int64"
            minimum: 0
        - name: "include_revoked"
          in: "query"
          description: "Include revoked keys (default: false)"
          required: false
          schema:
            type: "boolean"
      responses:
        "200":
          description: "API keys retrieved successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_Vec_ApiKeyResponse"}
        "401":
          description: "Not authenticated"
      security:
        - blackbox_auth_token: []
      x-speakeasy-group: "apiKeys"
      x-speakeasy-name-override: "list"
    post:
      tags:
        - "API Keys"
      operationId: "create_api_key"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/CreateApiKeyRequest"}
        required: true
      responses:
        "201":
          description: "API key created successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_CreateApiKeyResponse"}
        "400":
          description: "Invalid input"
        "401":
          description: "Not authenticated"
      security:
        - blackbox_auth_token: []
      x-speakeasy-group: "apiKeys"
      x-speakeasy-name-override: "create"
  "/api/v0/users/api-keys/{key_id}":
    get:
      tags:
        - "API Keys"
      operationId: "get_api_key"
      parameters:
        - name: "key_id"
          in: "path"
          description: "API key ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      responses:
        "200":
          description: "API key retrieved successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_ApiKeyResponse"}
        "401":
          description: "Not authenticated"
        "404":
          description: "API key not found"
      security:
        - blackbox_auth_token: []
      x-speakeasy-group: "apiKeys"
      x-speakeasy-name-override: "get"
    delete:
      tags:
        - "API Keys"
      operationId: "delete_api_key"
      parameters:
        - name: "key_id"
          in: "path"
          description: "API key ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      responses:
        "200":
          description: "API key deleted successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_String"}
        "401":
          description: "Not authenticated"
        "404":
          description: "API key not found"
      security:
        - blackbox_auth_token: []
      x-speakeasy-group: "apiKeys"
      x-speakeasy-name-override: "delete"
  "/api/v0/users/api-keys/{key_id}/revoke":
    post:
      tags:
        - "API Keys"
      operationId: "revoke_api_key"
      parameters:
        - name: "key_id"
          in: "path"
          description: "API key ID"
          required: true
          schema:
            type: "string"
            format: "uuid"
      responses:
        "200":
          description: "API key revoked successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_String"}
        "401":
          description: "Not authenticated"
        "404":
          description: "API key not found"
      security:
        - blackbox_auth_token: []
      x-speakeasy-group: "apiKeys"
      x-speakeasy-name-override: "revoke"
  "/api/v0/users/login-attempts":
    get:
      tags:
        - "Users"
      operationId: "get_login_attempts"
      parameters:
        - name: "limit"
          in: "query"
          description: "Maximum number of entries to return"
          required: false
          schema:
            type: "integer"
            format: "int64"
            minimum: 0
      responses:
        "200":
          description: "Login attempts"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_Vec_LoginAttemptResponse"}
        "401":
          description: "Not authenticated"
        "403":
          description: "Email verification required"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "getLoginAttempts"
  "/api/v0/users/login-history":
    get:
      tags:
        - "Users"
      operationId: "get_login_history"
      parameters:
        - name: "limit"
          in: "query"
          description: "Maximum number of entries to return"
          required: false
          schema:
            type: "integer"
            format: "int64"
            minimum: 0
      responses:
        "200":
          description: "Login history"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_Vec_LoginHistoryResponse"}
        "401":
          description: "Not authenticated"
        "403":
          description: "Email verification required"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "getLoginHistory"
  "/api/v0/users/password":
    put:
      tags:
        - "Users"
      operationId: "change_password"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/ChangePasswordRequest"}
        required: true
      responses:
        "200":
          description: "Password changed successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_String"}
        "400":
          description: "Invalid current password"
        "401":
          description: "Not authenticated"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "changePassword"
  "/api/v0/users/profile":
    get:
      tags:
        - "Users"
      operationId: "get_profile"
      responses:
        "200":
          description: "User profile"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_UserProfileResponse"}
        "401":
          description: "Not authenticated"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "getProfile"
    put:
      tags:
        - "Users"
      operationId: "update_profile"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/UpdateProfileRequest"}
        required: true
      responses:
        "200":
          description: "Profile updated successfully"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ApiResponse_UserProfileResponse"}
        "401":
          description: "Not authenticated"
      security:
        - blackbox_auth_token: []
      x-speakeasy-name-override: "updateProfile"
components:
  schemas:
    "AgentActivity":
      type: "object"
      required:
        - "agent_id"
        - "agent_name"
        - "last_activity"
        - "events_today"
        - "status"
      properties:
        "agent_id":
          type: "string"
          format: "uuid"
        "agent_name":
          type: "string"
        "events_today":
          type: "integer"
          format: "int64"
          minimum: 0
        "last_activity":
          type: "string"
        "status":
          type: "string"
    "AgentAnalytics":
      type: "object"
      required:
        - "top_performers"
        - "agent_activity"
        - "total_agents"
        - "active_agents_today"
        - "average_tickets_per_agent"
      properties:
        "active_agents_today":
          type: "integer"
          format: "int64"
          minimum: 0
        "agent_activity":
          type: "array"
          items: {"$ref": "#/components/schemas/AgentActivity"}
        "average_tickets_per_agent":
          type: "number"
          format: "double"
        "top_performers":
          type: "array"
          items: {"$ref": "#/components/schemas/AgentPerformance"}
        "total_agents":
          type: "integer"
          format: "int64"
          minimum: 0
    "AgentPerformance":
      type: "object"
      required:
        - "agent_id"
        - "agent_name"
        - "tickets_handled"
        - "tickets_resolved"
        - "messages_sent"
        - "resolution_rate"
      properties:
        "agent_id":
          type: "string"
          format: "uuid"
        "agent_name":
          type: "string"
        "average_resolution_time_hours":
          type:
            - "number"
            - "null"
          format: "double"
        "average_response_time_hours":
          type:
            - "number"
            - "null"
          format: "double"
        "messages_sent":
          type: "integer"
          format: "int64"
          minimum: 0
        "resolution_rate":
          type: "number"
          format: "double"
        "tickets_handled":
          type: "integer"
          format: "int64"
          minimum: 0
        "tickets_resolved":
          type: "integer"
          format: "int64"
          minimum: 0
    "AgentSatisfactionScore":
      type: "object"
      required:
        - "agent_id"
        - "agent_name"
        - "total_surveys"
        - "average_score"
        - "satisfaction_rate"
      properties:
        "agent_id":
          type: "string"
          format: "uuid"
        "agent_name":
          type: "string"
        "average_score":
          type: "number"
          format: "double"
        "satisfaction_rate":
          type: "number"
          format: "double"
        "total_surveys":
          type: "integer"
          format: "int64"
          minimum: 0
    "AnalyticsTimeRange":
      type: "object"
      properties:
        "from_date":
          type:
            - "string"
            - "null"
        "to_date":
          type:
            - "string"
            - "null"
    "ApiKeyListFilter":
      type: "object"
      properties:
        "include_revoked":
          type:
            - "boolean"
            - "null"
        "page":
          type:
            - "integer"
            - "null"
          format: "int64"
          minimum: 0
        "per_page":
          type:
            - "integer"
            - "null"
          format: "int64"
          minimum: 0
    "ApiKeyResponse":
      type: "object"
      required:
        - "id"
        - "name"
        - "scopes"
        - "created_at"
        - "revoked"
      properties:
        "created_at":
          type: "string"
        "expires_at":
          type:
            - "string"
            - "null"
        "id":
          type: "string"
          format: "uuid"
        "last_used":
          type:
            - "string"
            - "null"
        "name":
          type: "string"
        "revoked":
          type: "boolean"
        "scopes":
          type: "array"
          items:
            type: "string"
    "ApiResponse_AgentAnalytics":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          type: "object"
          required:
            - "top_performers"
            - "agent_activity"
            - "total_agents"
            - "active_agents_today"
            - "average_tickets_per_agent"
          properties:
            "active_agents_today":
              type: "integer"
              format: "int64"
              minimum: 0
            "agent_activity":
              type: "array"
              items: {"$ref": "#/components/schemas/AgentActivity"}
            "average_tickets_per_agent":
              type: "number"
              format: "double"
            "top_performers":
              type: "array"
              items: {"$ref": "#/components/schemas/AgentPerformance"}
            "total_agents":
              type: "integer"
              format: "int64"
              minimum: 0
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_ApiKeyResponse":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          type: "object"
          required:
            - "id"
            - "name"
            - "scopes"
            - "created_at"
            - "revoked"
          properties:
            "created_at":
              type: "string"
            "expires_at":
              type:
                - "string"
                - "null"
            "id":
              type: "string"
              format: "uuid"
            "last_used":
              type:
                - "string"
                - "null"
            "name":
              type: "string"
            "revoked":
              type: "boolean"
            "scopes":
              type: "array"
              items:
                type: "string"
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_ArticleResponse":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          type: "object"
          required:
            - "id"
            - "title"
            - "content"
            - "author_id"
            - "author_name"
            - "public"
            - "created_at"
            - "updated_at"
          properties:
            "author_id":
              type: "string"
              format: "uuid"
            "author_name":
              type: "string"
            "content":
              type: "string"
            "created_at":
              type: "string"
            "id":
              type: "string"
              format: "uuid"
            "public":
              type: "boolean"
            "title":
              type: "string"
            "updated_at":
              type: "string"
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_AuthResponse":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          type: "object"
          required:
            - "user_id"
            - "session_token"
            - "organizations"
            - "email_verified"
            - "two_fa_enabled"
          properties:
            "email_verified":
              type: "boolean"
            "organizations":
              type: "array"
              items: {"$ref": "#/components/schemas/UserOrgInfo"}
            "session_token":
              type: "string"
            "two_fa_enabled":
              type: "boolean"
            "user_id":
              type: "string"
              format: "uuid"
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_AutomationRuleResponse":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          type: "object"
          required:
            - "id"
            - "organization_id"
            - "name"
            - "description"
            - "enabled"
            - "trigger"
            - "conditions"
            - "actions"
            - "created_at"
            - "updated_at"
            - "execution_count"
          properties:
            "actions":
              type: "array"
              items: {"$ref": "#/components/schemas/AutomationAction"}
            "conditions": {"$ref": "#/components/schemas/AutomationConditions"}
            "created_at":
              type: "string"
            "description":
              type: "string"
            "enabled":
              type: "boolean"
            "execution_count":
              type: "integer"
              format: "int64"
              minimum: 0
            "id":
              type: "string"
              format: "uuid"
            "last_executed":
              type:
                - "string"
                - "null"
            "name":
              type: "string"
            "organization_id":
              type: "string"
              format: "uuid"
            "trigger":
              type: "string"
            "updated_at":
              type: "string"
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_AutomationStats":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          type: "object"
          required:
            - "total_rules"
            - "enabled_rules"
            - "disabled_rules"
            - "executions_today"
            - "executions_this_week"
            - "most_active_rules"
            - "trigger_distribution"
          properties:
            "disabled_rules":
              type: "integer"
              format: "int64"
              minimum: 0
            "enabled_rules":
              type: "integer"
              format: "int64"
              minimum: 0
            "executions_this_week":
              type: "integer"
              format: "int64"
              minimum: 0
            "executions_today":
              type: "integer"
              format: "int64"
              minimum: 0
            "most_active_rules":
              type: "array"
              items: {"$ref": "#/components/schemas/RuleActivity"}
            "total_rules":
              type: "integer"
              format: "int64"
              minimum: 0
            "trigger_distribution":
              type: "array"
              items: {"$ref": "#/components/schemas/TriggerCount"}
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_CSATAnalytics":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          type: "object"
          required:
            - "total_surveys"
            - "surveys_this_month"
            - "surveys_this_week"
            - "surveys_today"
            - "average_score"
            - "satisfaction_rate"
            - "score_distribution"
            - "monthly_trends"
            - "top_issues"
            - "agent_satisfaction"
          properties:
            "agent_satisfaction":
              type: "array"
              items: {"$ref": "#/components/schemas/AgentSatisfactionScore"}
            "average_score":
              type: "number"
              format: "double"
            "monthly_trends":
              type: "array"
              items: {"$ref": "#/components/schemas/MonthlySurveyData"}
            "satisfaction_rate":
              type: "number"
              format: "double"
            "score_distribution":
              type: "array"
              items: {"$ref": "#/components/schemas/ScoreCount"}
            "surveys_this_month":
              type: "integer"
              format: "int64"
              minimum: 0
            "surveys_this_week":
              type: "integer"
              format: "int64"
              minimum: 0
            "surveys_today":
              type: "integer"
              format: "int64"
              minimum: 0
            "top_issues":
              type: "array"
              items: {"$ref": "#/components/schemas/IssueCategory"}
            "total_surveys":
              type: "integer"
              format: "int64"
              minimum: 0
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_CreateApiKeyResponse":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          type: "object"
          required:
            - "id"
            - "name"
            - "key"
            - "scopes"
            - "created_at"
          properties:
            "created_at":
              type: "string"
            "expires_at":
              type:
                - "string"
                - "null"
            "id":
              type: "string"
              format: "uuid"
            "key":
              type: "string"
            "name":
              type: "string"
            "scopes":
              type: "array"
              items:
                type: "string"
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_EventLogResponse":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          type: "object"
          required:
            - "id"
            - "organization_id"
            - "event_type"
            - "metadata"
            - "created_at"
          properties:
            "created_at":
              type: "string"
            "event_type":
              type: "string"
            "id":
              type: "string"
              format: "uuid"
            "metadata": {}
            "organization_id":
              type: "string"
              format: "uuid"
            "ticket_id":
              type:
                - "string"
                - "null"
              format: "uuid"
            "ticket_subject":
              type:
                - "string"
                - "null"
            "user_id":
              type:
                - "string"
                - "null"
              format: "uuid"
            "user_name":
              type:
                - "string"
                - "null"
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_EventLogStats":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          type: "object"
          required:
            - "total_events"
            - "events_today"
            - "events_this_week"
            - "events_this_month"
            - "top_event_types"
            - "most_active_users"
          properties:
            "events_this_month":
              type: "integer"
              format: "int64"
              minimum: 0
            "events_this_week":
              type: "integer"
              format: "int64"
              minimum: 0
            "events_today":
              type: "integer"
              format: "int64"
              minimum: 0
            "most_active_users":
              type: "array"
              items: {"$ref": "#/components/schemas/UserEventCount"}
            "top_event_types":
              type: "array"
              items: {"$ref": "#/components/schemas/EventTypeCount"}
            "total_events":
              type: "integer"
              format: "int64"
              minimum: 0
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_KnowledgeBaseStats":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          type: "object"
          required:
            - "total_articles"
            - "public_articles"
            - "articles_created_this_month"
            - "most_viewed_articles"
          properties:
            "articles_created_this_month":
              type: "integer"
              format: "int64"
              minimum: 0
            "most_viewed_articles":
              type: "array"
              items: {"$ref": "#/components/schemas/ArticleView"}
            "public_articles":
              type: "integer"
              format: "int64"
              minimum: 0
            "total_articles":
              type: "integer"
              format: "int64"
              minimum: 0
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_MacroResponse":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          type: "object"
          required:
            - "id"
            - "organization_id"
            - "name"
            - "description"
            - "content"
            - "created_by"
            - "created_by_name"
            - "created_at"
            - "updated_at"
          properties:
            "content":
              type: "string"
            "created_at":
              type: "string"
            "created_by":
              type: "string"
              format: "uuid"
            "created_by_name":
              type: "string"
            "description":
              type: "string"
            "id":
              type: "string"
              format: "uuid"
            "name":
              type: "string"
            "organization_id":
              type: "string"
              format: "uuid"
            "updated_at":
              type: "string"
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_MacroTemplateResponse":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          type: "object"
          required:
            - "macro_id"
            - "macro_name"
            - "rendered_content"
            - "variables_used"
          properties:
            "macro_id":
              type: "string"
              format: "uuid"
            "macro_name":
              type: "string"
            "rendered_content":
              type: "string"
            "variables_used":
              type: "array"
              items:
                type: "string"
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_MacroUsageStats":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          type: "object"
          required:
            - "total_macros"
            - "macros_used_today"
            - "macros_used_this_month"
            - "most_used_macros"
          properties:
            "macros_used_this_month":
              type: "integer"
              format: "int64"
              minimum: 0
            "macros_used_today":
              type: "integer"
              format: "int64"
              minimum: 0
            "most_used_macros":
              type: "array"
              items: {"$ref": "#/components/schemas/MacroUsage"}
            "total_macros":
              type: "integer"
              format: "int64"
              minimum: 0
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_MessageResponse":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          type: "object"
          required:
            - "id"
            - "ticket_id"
            - "sender_id"
            - "sender_name"
            - "content"
            - "channel"
            - "sent_at"
          properties:
            "attachments": {}
            "channel":
              type: "string"
            "content":
              type: "string"
            "id":
              type: "string"
              format: "uuid"
            "sender_id":
              type: "string"
              format: "uuid"
            "sender_name":
              type: "string"
            "sent_at":
              type: "string"
            "ticket_id":
              type: "string"
              format: "uuid"
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_Option_MessageResponse":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          oneOf:
            - type: "null"
            - type: "object"
              required:
                - "id"
                - "ticket_id"
                - "sender_id"
                - "sender_name"
                - "content"
                - "channel"
                - "sent_at"
              properties:
                "attachments": {}
                "channel":
                  type: "string"
                "content":
                  type: "string"
                "id":
                  type: "string"
                  format: "uuid"
                "sender_id":
                  type: "string"
                  format: "uuid"
                "sender_name":
                  type: "string"
                "sent_at":
                  type: "string"
                "ticket_id":
                  type: "string"
                  format: "uuid"
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_Option_OrganizationSettingResponse":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          oneOf:
            - type: "null"
            - type: "object"
              required:
                - "id"
                - "key"
                - "value"
                - "created_at"
                - "updated_at"
              properties:
                "created_at":
                  type: "string"
                "id":
                  type: "string"
                  format: "uuid"
                "key":
                  type: "string"
                "updated_at":
                  type: "string"
                "value": {}
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_OrganizationAnalytics":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          type: "object"
          required:
            - "ticket_analytics"
            - "agent_analytics"
            - "system_usage"
            - "knowledge_base_stats"
            - "macro_usage_stats"
          properties:
            "agent_analytics": {"$ref": "#/components/schemas/AgentAnalytics"}
            "knowledge_base_stats": {"$ref": "#/components/schemas/KnowledgeBaseStats"}
            "macro_usage_stats": {"$ref": "#/components/schemas/MacroUsageStats"}
            "system_usage": {"$ref": "#/components/schemas/SystemUsage"}
            "ticket_analytics": {"$ref": "#/components/schemas/TicketAnalytics"}
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_OrganizationResponse":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          type: "object"
          required:
            - "id"
            - "name"
            - "domain"
            - "created_at"
          properties:
            "created_at":
              type: "string"
            "domain":
              type: "string"
            "id":
              type: "string"
              format: "uuid"
            "name":
              type: "string"
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_OrganizationSettingResponse":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          type: "object"
          required:
            - "id"
            - "key"
            - "value"
            - "created_at"
            - "updated_at"
          properties:
            "created_at":
              type: "string"
            "id":
              type: "string"
              format: "uuid"
            "key":
              type: "string"
            "updated_at":
              type: "string"
            "value": {}
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_RegisterResponse":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          type: "object"
          required:
            - "user_id"
            - "session_token"
            - "email_verified"
            - "two_fa_enabled"
          properties:
            "email_verified":
              type: "boolean"
            "session_token":
              type: "string"
            "two_fa_enabled":
              type: "boolean"
            "user_id":
              type: "string"
              format: "uuid"
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_Setup2FAResponse":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          type: "object"
          required:
            - "secret"
            - "qr_code_url"
            - "qr_code_svg"
            - "backup_codes"
          properties:
            "backup_codes":
              type: "array"
              items:
                type: "string"
            "qr_code_svg":
              type: "string"
            "qr_code_url":
              type: "string"
            "secret":
              type: "string"
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_String":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          type: "string"
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_SurveyExport":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          type: "object"
          required:
            - "surveys"
            - "analytics"
            - "export_date"
          properties:
            "analytics": {"$ref": "#/components/schemas/CSATAnalytics"}
            "export_date":
              type: "string"
            "surveys":
              type: "array"
              items: {"$ref": "#/components/schemas/SurveyResponse"}
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_SurveyResponse":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          type: "object"
          required:
            - "id"
            - "organization_id"
            - "ticket_id"
            - "user_id"
            - "user_name"
            - "score"
            - "created_at"
          properties:
            "comment":
              type:
                - "string"
                - "null"
            "created_at":
              type: "string"
            "id":
              type: "string"
              format: "uuid"
            "organization_id":
              type: "string"
              format: "uuid"
            "score":
              type: "integer"
              format: "int32"
            "ticket_id":
              type: "string"
              format: "uuid"
            "ticket_subject":
              type:
                - "string"
                - "null"
            "user_id":
              type: "string"
              format: "uuid"
            "user_name":
              type: "string"
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_SystemUsage":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          type: "object"
          required:
            - "total_events_today"
            - "total_events_this_week"
            - "total_events_this_month"
            - "peak_hour"
            - "peak_day_of_week"
            - "api_calls_today"
            - "active_sessions"
          properties:
            "active_sessions":
              type: "integer"
              format: "int64"
              minimum: 0
            "api_calls_today":
              type: "integer"
              format: "int64"
              minimum: 0
            "peak_day_of_week":
              type: "string"
            "peak_hour":
              type: "integer"
              format: "int32"
              minimum: 0
            "total_events_this_month":
              type: "integer"
              format: "int64"
              minimum: 0
            "total_events_this_week":
              type: "integer"
              format: "int64"
              minimum: 0
            "total_events_today":
              type: "integer"
              format: "int64"
              minimum: 0
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_TagResponse":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          type: "object"
          required:
            - "id"
            - "name"
            - "color"
            - "ticket_count"
          properties:
            "color":
              type: "string"
            "id":
              type: "string"
              format: "uuid"
            "name":
              type: "string"
            "ticket_count":
              type: "integer"
              format: "int64"
              minimum: 0
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_TagWithTicketsResponse":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          type: "object"
          required:
            - "id"
            - "name"
            - "color"
            - "tickets"
          properties:
            "color":
              type: "string"
            "id":
              type: "string"
              format: "uuid"
            "name":
              type: "string"
            "tickets":
              type: "array"
              items: {"$ref": "#/components/schemas/TagTicketResponse"}
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_TicketAnalytics":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          type: "object"
          required:
            - "total_tickets"
            - "open_tickets"
            - "in_progress_tickets"
            - "resolved_tickets"
            - "closed_tickets"
            - "tickets_created_today"
            - "tickets_created_this_week"
            - "tickets_created_this_month"
            - "status_distribution"
            - "priority_distribution"
            - "daily_ticket_trends"
          properties:
            "average_first_response_time_hours":
              type:
                - "number"
                - "null"
              format: "double"
            "average_resolution_time_hours":
              type:
                - "number"
                - "null"
              format: "double"
            "closed_tickets":
              type: "integer"
              format: "int64"
              minimum: 0
            "daily_ticket_trends":
              type: "array"
              items: {"$ref": "#/components/schemas/DailyCount"}
            "in_progress_tickets":
              type: "integer"
              format: "int64"
              minimum: 0
            "open_tickets":
              type: "integer"
              format: "int64"
              minimum: 0
            "priority_distribution":
              type: "array"
              items: {"$ref": "#/components/schemas/PriorityCount"}
            "resolved_tickets":
              type: "integer"
              format: "int64"
              minimum: 0
            "status_distribution":
              type: "array"
              items: {"$ref": "#/components/schemas/StatusCount"}
            "tickets_created_this_month":
              type: "integer"
              format: "int64"
              minimum: 0
            "tickets_created_this_week":
              type: "integer"
              format: "int64"
              minimum: 0
            "tickets_created_today":
              type: "integer"
              format: "int64"
              minimum: 0
            "total_tickets":
              type: "integer"
              format: "int64"
              minimum: 0
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_TicketResponse":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          type: "object"
          required:
            - "id"
            - "subject"
            - "description"
            - "status"
            - "priority"
            - "created_by"
            - "created_by_name"
            - "created_at"
            - "updated_at"
            - "tags"
          properties:
            "assigned_to":
              type:
                - "string"
                - "null"
              format: "uuid"
            "assigned_to_name":
              type:
                - "string"
                - "null"
            "created_at":
              type: "string"
            "created_by":
              type: "string"
              format: "uuid"
            "created_by_name":
              type: "string"
            "description":
              type: "string"
            "id":
              type: "string"
              format: "uuid"
            "priority":
              type: "string"
            "status":
              type: "string"
            "subject":
              type: "string"
            "tags":
              type: "array"
              items: {"$ref": "#/components/schemas/TicketTagResponse"}
            "updated_at":
              type: "string"
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_TimeSeriesData":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          type: "object"
          required:
            - "labels"
            - "datasets"
          properties:
            "datasets":
              type: "array"
              items: {"$ref": "#/components/schemas/TimeSeriesDataset"}
            "labels":
              type: "array"
              items:
                type: "string"
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_UploadResponse":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          type: "object"
          required:
            - "attachments"
            - "message"
          properties:
            "attachments":
              type: "array"
              items: {"$ref": "#/components/schemas/AttachmentResponse"}
            "message":
              type: "string"
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_UserProfileResponse":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          type: "object"
          required:
            - "id"
            - "email"
            - "name"
            - "email_verified"
            - "two_fa_enabled"
            - "created_at"
            - "organizations"
          properties:
            "created_at":
              type: "string"
            "email":
              type: "string"
            "email_verified":
              type: "boolean"
            "id":
              type: "string"
              format: "uuid"
            "name":
              type: "string"
            "organizations":
              type: "array"
              items: {"$ref": "#/components/schemas/UserOrgMembership"}
            "two_fa_enabled":
              type: "boolean"
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_Value":
      type: "object"
      required:
        - "success"
      properties:
        "data": {}
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_Vec_ApiKeyResponse":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          type: "array"
          items:
            type: "object"
            required:
              - "id"
              - "name"
              - "scopes"
              - "created_at"
              - "revoked"
            properties:
              "created_at":
                type: "string"
              "expires_at":
                type:
                  - "string"
                  - "null"
              "id":
                type: "string"
                format: "uuid"
              "last_used":
                type:
                  - "string"
                  - "null"
              "name":
                type: "string"
              "revoked":
                type: "boolean"
              "scopes":
                type: "array"
                items:
                  type: "string"
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_Vec_ArticleResponse":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          type: "array"
          items:
            type: "object"
            required:
              - "id"
              - "title"
              - "content"
              - "author_id"
              - "author_name"
              - "public"
              - "created_at"
              - "updated_at"
            properties:
              "author_id":
                type: "string"
                format: "uuid"
              "author_name":
                type: "string"
              "content":
                type: "string"
              "created_at":
                type: "string"
              "id":
                type: "string"
                format: "uuid"
              "public":
                type: "boolean"
              "title":
                type: "string"
              "updated_at":
                type: "string"
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_Vec_AttachmentResponse":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          type: "array"
          items:
            type: "object"
            required:
              - "id"
              - "filename"
              - "original_filename"
              - "content_type"
              - "file_size"
              - "uploaded_at"
              - "download_url"
            properties:
              "content_type":
                type: "string"
              "download_url":
                type: "string"
              "file_size":
                type: "integer"
                format: "int64"
              "filename":
                type: "string"
              "id":
                type: "string"
                format: "uuid"
              "original_filename":
                type: "string"
              "uploaded_at":
                type: "string"
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_Vec_AutomationExecution":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          type: "array"
          items:
            type: "object"
            required:
              - "rule_id"
              - "rule_name"
              - "trigger"
              - "executed_at"
              - "context"
              - "actions_performed"
              - "success"
            properties:
              "actions_performed":
                type: "array"
                items:
                  type: "string"
              "context": {}
              "error_message":
                type:
                  - "string"
                  - "null"
              "executed_at":
                type: "string"
              "rule_id":
                type: "string"
                format: "uuid"
              "rule_name":
                type: "string"
              "success":
                type: "boolean"
              "trigger":
                type: "string"
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_Vec_AutomationRuleResponse":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          type: "array"
          items:
            type: "object"
            required:
              - "id"
              - "organization_id"
              - "name"
              - "description"
              - "enabled"
              - "trigger"
              - "conditions"
              - "actions"
              - "created_at"
              - "updated_at"
              - "execution_count"
            properties:
              "actions":
                type: "array"
                items: {"$ref": "#/components/schemas/AutomationAction"}
              "conditions": {"$ref": "#/components/schemas/AutomationConditions"}
              "created_at":
                type: "string"
              "description":
                type: "string"
              "enabled":
                type: "boolean"
              "execution_count":
                type: "integer"
                format: "int64"
                minimum: 0
              "id":
                type: "string"
                format: "uuid"
              "last_executed":
                type:
                  - "string"
                  - "null"
              "name":
                type: "string"
              "organization_id":
                type: "string"
                format: "uuid"
              "trigger":
                type: "string"
              "updated_at":
                type: "string"
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_Vec_EventLogResponse":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          type: "array"
          items:
            type: "object"
            required:
              - "id"
              - "organization_id"
              - "event_type"
              - "metadata"
              - "created_at"
            properties:
              "created_at":
                type: "string"
              "event_type":
                type: "string"
              "id":
                type: "string"
                format: "uuid"
              "metadata": {}
              "organization_id":
                type: "string"
                format: "uuid"
              "ticket_id":
                type:
                  - "string"
                  - "null"
                format: "uuid"
              "ticket_subject":
                type:
                  - "string"
                  - "null"
              "user_id":
                type:
                  - "string"
                  - "null"
                format: "uuid"
              "user_name":
                type:
                  - "string"
                  - "null"
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_Vec_LoginAttemptResponse":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          type: "array"
          items:
            type: "object"
            required:
              - "id"
              - "success"
              - "ip_address"
              - "user_agent"
              - "attempted_at"
            properties:
              "attempted_at":
                type: "string"
              "id":
                type: "string"
                format: "uuid"
              "ip_address":
                type: "string"
              "success":
                type: "boolean"
              "user_agent":
                type: "string"
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_Vec_LoginHistoryResponse":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          type: "array"
          items:
            type: "object"
            required:
              - "id"
              - "ip_address"
              - "user_agent"
              - "logged_in_at"
            properties:
              "id":
                type: "string"
                format: "uuid"
              "ip_address":
                type: "string"
              "logged_in_at":
                type: "string"
              "user_agent":
                type: "string"
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_Vec_MacroResponse":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          type: "array"
          items:
            type: "object"
            required:
              - "id"
              - "organization_id"
              - "name"
              - "description"
              - "content"
              - "created_by"
              - "created_by_name"
              - "created_at"
              - "updated_at"
            properties:
              "content":
                type: "string"
              "created_at":
                type: "string"
              "created_by":
                type: "string"
                format: "uuid"
              "created_by_name":
                type: "string"
              "description":
                type: "string"
              "id":
                type: "string"
                format: "uuid"
              "name":
                type: "string"
              "organization_id":
                type: "string"
                format: "uuid"
              "updated_at":
                type: "string"
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_Vec_MembershipResponse":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          type: "array"
          items:
            type: "object"
            required:
              - "id"
              - "user_id"
              - "user_name"
              - "user_email"
              - "role"
              - "status"
              - "created_at"
            properties:
              "created_at":
                type: "string"
              "id":
                type: "string"
                format: "uuid"
              "invited_by":
                type:
                  - "string"
                  - "null"
                format: "uuid"
              "role":
                type: "string"
              "status":
                type: "string"
              "user_email":
                type: "string"
              "user_id":
                type: "string"
                format: "uuid"
              "user_name":
                type: "string"
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_Vec_MessageResponse":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          type: "array"
          items:
            type: "object"
            required:
              - "id"
              - "ticket_id"
              - "sender_id"
              - "sender_name"
              - "content"
              - "channel"
              - "sent_at"
            properties:
              "attachments": {}
              "channel":
                type: "string"
              "content":
                type: "string"
              "id":
                type: "string"
                format: "uuid"
              "sender_id":
                type: "string"
                format: "uuid"
              "sender_name":
                type: "string"
              "sent_at":
                type: "string"
              "ticket_id":
                type: "string"
                format: "uuid"
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_Vec_OrganizationByDomainResponse":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          type: "array"
          items:
            type: "object"
            required:
              - "id"
              - "name"
              - "domain"
              - "allow_domain_join"
              - "created_at"
            properties:
              "allow_domain_join":
                type: "boolean"
              "created_at":
                type: "string"
              "domain":
                type: "string"
              "id":
                type: "string"
                format: "uuid"
              "name":
                type: "string"
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_Vec_OrganizationResponse":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          type: "array"
          items:
            type: "object"
            required:
              - "id"
              - "name"
              - "domain"
              - "created_at"
            properties:
              "created_at":
                type: "string"
              "domain":
                type: "string"
              "id":
                type: "string"
                format: "uuid"
              "name":
                type: "string"
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_Vec_OrganizationSettingResponse":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          type: "array"
          items:
            type: "object"
            required:
              - "id"
              - "key"
              - "value"
              - "created_at"
              - "updated_at"
            properties:
              "created_at":
                type: "string"
              "id":
                type: "string"
                format: "uuid"
              "key":
                type: "string"
              "updated_at":
                type: "string"
              "value": {}
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_Vec_String":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          type: "array"
          items:
            type: "string"
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_Vec_SurveyResponse":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          type: "array"
          items:
            type: "object"
            required:
              - "id"
              - "organization_id"
              - "ticket_id"
              - "user_id"
              - "user_name"
              - "score"
              - "created_at"
            properties:
              "comment":
                type:
                  - "string"
                  - "null"
              "created_at":
                type: "string"
              "id":
                type: "string"
                format: "uuid"
              "organization_id":
                type: "string"
                format: "uuid"
              "score":
                type: "integer"
                format: "int32"
              "ticket_id":
                type: "string"
                format: "uuid"
              "ticket_subject":
                type:
                  - "string"
                  - "null"
              "user_id":
                type: "string"
                format: "uuid"
              "user_name":
                type: "string"
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_Vec_TagResponse":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          type: "array"
          items:
            type: "object"
            required:
              - "id"
              - "name"
              - "color"
              - "ticket_count"
            properties:
              "color":
                type: "string"
              "id":
                type: "string"
                format: "uuid"
              "name":
                type: "string"
              "ticket_count":
                type: "integer"
                format: "int64"
                minimum: 0
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_Vec_TicketResponse":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          type: "array"
          items:
            type: "object"
            required:
              - "id"
              - "subject"
              - "description"
              - "status"
              - "priority"
              - "created_by"
              - "created_by_name"
              - "created_at"
              - "updated_at"
              - "tags"
            properties:
              "assigned_to":
                type:
                  - "string"
                  - "null"
                format: "uuid"
              "assigned_to_name":
                type:
                  - "string"
                  - "null"
              "created_at":
                type: "string"
              "created_by":
                type: "string"
                format: "uuid"
              "created_by_name":
                type: "string"
              "description":
                type: "string"
              "id":
                type: "string"
                format: "uuid"
              "priority":
                type: "string"
              "status":
                type: "string"
              "subject":
                type: "string"
              "tags":
                type: "array"
                items: {"$ref": "#/components/schemas/TicketTagResponse"}
              "updated_at":
                type: "string"
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_Vec_WebhookDelivery":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          type: "array"
          items:
            type: "object"
            required:
              - "id"
              - "webhook_id"
              - "webhook_name"
              - "event_type"
              - "payload"
              - "url"
              - "status"
              - "attempt_count"
              - "created_at"
            properties:
              "attempt_count":
                type: "integer"
                format: "int32"
                minimum: 0
              "created_at":
                type: "string"
              "delivered_at":
                type:
                  - "string"
                  - "null"
              "error_message":
                type:
                  - "string"
                  - "null"
              "event_type":
                type: "string"
              "id":
                type: "string"
                format: "uuid"
              "next_retry":
                type:
                  - "string"
                  - "null"
              "payload": {}
              "response_body":
                type:
                  - "string"
                  - "null"
              "response_code":
                type:
                  - "integer"
                  - "null"
                format: "int32"
                minimum: 0
              "status":
                type: "string"
              "url":
                type: "string"
              "webhook_id":
                type: "string"
                format: "uuid"
              "webhook_name":
                type: "string"
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_Vec_WebhookResponse":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          type: "array"
          items:
            type: "object"
            required:
              - "id"
              - "organization_id"
              - "name"
              - "url"
              - "events"
              - "enabled"
              - "created_at"
              - "updated_at"
              - "success_count"
              - "failure_count"
            properties:
              "created_at":
                type: "string"
              "description":
                type:
                  - "string"
                  - "null"
              "enabled":
                type: "boolean"
              "events":
                type: "array"
                items:
                  type: "string"
              "failure_count":
                type: "integer"
                format: "int64"
                minimum: 0
              "headers":
                type:
                  - "object"
                  - "null"
                additionalProperties:
                  type: "string"
                propertyNames:
                  type: "string"
              "id":
                type: "string"
                format: "uuid"
              "last_delivery":
                type:
                  - "string"
                  - "null"
              "name":
                type: "string"
              "organization_id":
                type: "string"
                format: "uuid"
              "success_count":
                type: "integer"
                format: "int64"
                minimum: 0
              "updated_at":
                type: "string"
              "url":
                type: "string"
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_WebhookResponse":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          type: "object"
          required:
            - "id"
            - "organization_id"
            - "name"
            - "url"
            - "events"
            - "enabled"
            - "created_at"
            - "updated_at"
            - "success_count"
            - "failure_count"
          properties:
            "created_at":
              type: "string"
            "description":
              type:
                - "string"
                - "null"
            "enabled":
              type: "boolean"
            "events":
              type: "array"
              items:
                type: "string"
            "failure_count":
              type: "integer"
              format: "int64"
              minimum: 0
            "headers":
              type:
                - "object"
                - "null"
              additionalProperties:
                type: "string"
              propertyNames:
                type: "string"
            "id":
              type: "string"
              format: "uuid"
            "last_delivery":
              type:
                - "string"
                - "null"
            "name":
              type: "string"
            "organization_id":
              type: "string"
              format: "uuid"
            "success_count":
              type: "integer"
              format: "int64"
              minimum: 0
            "updated_at":
              type: "string"
            "url":
              type: "string"
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_WebhookStats":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          type: "object"
          required:
            - "total_webhooks"
            - "enabled_webhooks"
            - "deliveries_today"
            - "deliveries_this_week"
            - "success_rate"
            - "most_active_webhooks"
            - "event_distribution"
            - "recent_failures"
          properties:
            "average_response_time":
              type:
                - "number"
                - "null"
              format: "double"
            "deliveries_this_week":
              type: "integer"
              format: "int64"
              minimum: 0
            "deliveries_today":
              type: "integer"
              format: "int64"
              minimum: 0
            "enabled_webhooks":
              type: "integer"
              format: "int64"
              minimum: 0
            "event_distribution":
              type: "array"
              items: {"$ref": "#/components/schemas/EventTypeDelivery"}
            "most_active_webhooks":
              type: "array"
              items: {"$ref": "#/components/schemas/WebhookActivity"}
            "recent_failures":
              type: "array"
              items: {"$ref": "#/components/schemas/WebhookDelivery"}
            "success_rate":
              type: "number"
              format: "double"
            "total_webhooks":
              type: "integer"
              format: "int64"
              minimum: 0
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_WebhookTestResult":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          type: "object"
          required:
            - "webhook_id"
            - "success"
            - "response_time_ms"
          properties:
            "error_message":
              type:
                - "string"
                - "null"
            "response_code":
              type:
                - "integer"
                - "null"
              format: "int32"
              minimum: 0
            "response_time_ms":
              type: "integer"
              format: "int64"
              minimum: 0
            "success":
              type: "boolean"
            "webhook_id":
              type: "string"
              format: "uuid"
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ApiResponse_u64":
      type: "object"
      required:
        - "success"
      properties:
        "data":
          type: "integer"
          format: "int64"
          minimum: 0
        "message":
          type:
            - "string"
            - "null"
        "success":
          type: "boolean"
    "ArticleListFilter":
      type: "object"
      properties:
        "author_id":
          type:
            - "string"
            - "null"
          format: "uuid"
        "page":
          type:
            - "integer"
            - "null"
          format: "int64"
          minimum: 0
        "per_page":
          type:
            - "integer"
            - "null"
          format: "int64"
          minimum: 0
        "public":
          type:
            - "boolean"
            - "null"
        "search":
          type:
            - "string"
            - "null"
    "ArticleResponse":
      type: "object"
      required:
        - "id"
        - "title"
        - "content"
        - "author_id"
        - "author_name"
        - "public"
        - "created_at"
        - "updated_at"
      properties:
        "author_id":
          type: "string"
          format: "uuid"
        "author_name":
          type: "string"
        "content":
          type: "string"
        "created_at":
          type: "string"
        "id":
          type: "string"
          format: "uuid"
        "public":
          type: "boolean"
        "title":
          type: "string"
        "updated_at":
          type: "string"
    "ArticleView":
      type: "object"
      required:
        - "article_id"
        - "title"
        - "views"
      properties:
        "article_id":
          type: "string"
          format: "uuid"
        "title":
          type: "string"
        "views":
          type: "integer"
          format: "int64"
          minimum: 0
    "AttachmentResponse":
      type: "object"
      required:
        - "id"
        - "filename"
        - "original_filename"
        - "content_type"
        - "file_size"
        - "uploaded_at"
        - "download_url"
      properties:
        "content_type":
          type: "string"
        "download_url":
          type: "string"
        "file_size":
          type: "integer"
          format: "int64"
        "filename":
          type: "string"
        "id":
          type: "string"
          format: "uuid"
        "original_filename":
          type: "string"
        "uploaded_at":
          type: "string"
    "AuthProfileResponse":
      type: "object"
      required:
        - "user_id"
        - "email"
        - "email_verified"
        - "two_fa_enabled"
        - "organizations"
      properties:
        "email":
          type: "string"
        "email_verified":
          type: "boolean"
        "organizations":
          type: "array"
          items: {"$ref": "#/components/schemas/OrganizationDetail"}
        "two_fa_enabled":
          type: "boolean"
        "user_id":
          type: "string"
          format: "uuid"
    "AuthResponse":
      type: "object"
      required:
        - "user_id"
        - "session_token"
        - "organizations"
        - "email_verified"
        - "two_fa_enabled"
      properties:
        "email_verified":
          type: "boolean"
        "organizations":
          type: "array"
          items: {"$ref": "#/components/schemas/UserOrgInfo"}
        "session_token":
          type: "string"
        "two_fa_enabled":
          type: "boolean"
        "user_id":
          type: "string"
          format: "uuid"
    "AutomationAction":
      type: "object"
      required:
        - "action_type"
        - "parameters"
      properties:
        "action_type":
          type: "string"
        "parameters":
          type: "object"
          additionalProperties: {}
          propertyNames:
            type: "string"
    "AutomationCondition":
      type: "object"
      required:
        - "field"
        - "operator"
        - "value"
      properties:
        "field":
          type: "string"
        "operator":
          type: "string"
        "value": {}
    "AutomationConditions":
      type: "object"
      required:
        - "logic"
        - "conditions"
      properties:
        "conditions":
          type: "array"
          items: {"$ref": "#/components/schemas/AutomationCondition"}
        "logic":
          type: "string"
    "AutomationExecution":
      type: "object"
      required:
        - "rule_id"
        - "rule_name"
        - "trigger"
        - "executed_at"
        - "context"
        - "actions_performed"
        - "success"
      properties:
        "actions_performed":
          type: "array"
          items:
            type: "string"
        "context": {}
        "error_message":
          type:
            - "string"
            - "null"
        "executed_at":
          type: "string"
        "rule_id":
          type: "string"
          format: "uuid"
        "rule_name":
          type: "string"
        "success":
          type: "boolean"
        "trigger":
          type: "string"
    "AutomationRuleListFilter":
      type: "object"
      properties:
        "enabled":
          type:
            - "boolean"
            - "null"
        "name_search":
          type:
            - "string"
            - "null"
        "page":
          type:
            - "integer"
            - "null"
          format: "int64"
          minimum: 0
        "per_page":
          type:
            - "integer"
            - "null"
          format: "int64"
          minimum: 0
        "trigger":
          type:
            - "string"
            - "null"
    "AutomationRuleResponse":
      type: "object"
      required:
        - "id"
        - "organization_id"
        - "name"
        - "description"
        - "enabled"
        - "trigger"
        - "conditions"
        - "actions"
        - "created_at"
        - "updated_at"
        - "execution_count"
      properties:
        "actions":
          type: "array"
          items: {"$ref": "#/components/schemas/AutomationAction"}
        "conditions": {"$ref": "#/components/schemas/AutomationConditions"}
        "created_at":
          type: "string"
        "description":
          type: "string"
        "enabled":
          type: "boolean"
        "execution_count":
          type: "integer"
          format: "int64"
          minimum: 0
        "id":
          type: "string"
          format: "uuid"
        "last_executed":
          type:
            - "string"
            - "null"
        "name":
          type: "string"
        "organization_id":
          type: "string"
          format: "uuid"
        "trigger":
          type: "string"
        "updated_at":
          type: "string"
    "AutomationStats":
      type: "object"
      required:
        - "total_rules"
        - "enabled_rules"
        - "disabled_rules"
        - "executions_today"
        - "executions_this_week"
        - "most_active_rules"
        - "trigger_distribution"
      properties:
        "disabled_rules":
          type: "integer"
          format: "int64"
          minimum: 0
        "enabled_rules":
          type: "integer"
          format: "int64"
          minimum: 0
        "executions_this_week":
          type: "integer"
          format: "int64"
          minimum: 0
        "executions_today":
          type: "integer"
          format: "int64"
          minimum: 0
        "most_active_rules":
          type: "array"
          items: {"$ref": "#/components/schemas/RuleActivity"}
        "total_rules":
          type: "integer"
          format: "int64"
          minimum: 0
        "trigger_distribution":
          type: "array"
          items: {"$ref": "#/components/schemas/TriggerCount"}
    "CSATAnalytics":
      type: "object"
      required:
        - "total_surveys"
        - "surveys_this_month"
        - "surveys_this_week"
        - "surveys_today"
        - "average_score"
        - "satisfaction_rate"
        - "score_distribution"
        - "monthly_trends"
        - "top_issues"
        - "agent_satisfaction"
      properties:
        "agent_satisfaction":
          type: "array"
          items: {"$ref": "#/components/schemas/AgentSatisfactionScore"}
        "average_score":
          type: "number"
          format: "double"
        "monthly_trends":
          type: "array"
          items: {"$ref": "#/components/schemas/MonthlySurveyData"}
        "satisfaction_rate":
          type: "number"
          format: "double"
        "score_distribution":
          type: "array"
          items: {"$ref": "#/components/schemas/ScoreCount"}
        "surveys_this_month":
          type: "integer"
          format: "int64"
          minimum: 0
        "surveys_this_week":
          type: "integer"
          format: "int64"
          minimum: 0
        "surveys_today":
          type: "integer"
          format: "int64"
          minimum: 0
        "top_issues":
          type: "array"
          items: {"$ref": "#/components/schemas/IssueCategory"}
        "total_surveys":
          type: "integer"
          format: "int64"
          minimum: 0
    "ChangePasswordRequest":
      type: "object"
      required:
        - "current_password"
        - "new_password"
      properties:
        "current_password":
          type: "string"
        "new_password":
          type: "string"
    "CreateApiKeyRequest":
      type: "object"
      required:
        - "name"
        - "scopes"
      properties:
        "expires_in_days":
          type:
            - "integer"
            - "null"
          format: "int32"
          minimum: 0
        "name":
          type: "string"
        "scopes":
          type: "array"
          items:
            type: "string"
    "CreateApiKeyResponse":
      type: "object"
      required:
        - "id"
        - "name"
        - "key"
        - "scopes"
        - "created_at"
      properties:
        "created_at":
          type: "string"
        "expires_at":
          type:
            - "string"
            - "null"
        "id":
          type: "string"
          format: "uuid"
        "key":
          type: "string"
        "name":
          type: "string"
        "scopes":
          type: "array"
          items:
            type: "string"
    "CreateArticleRequest":
      type: "object"
      required:
        - "title"
        - "content"
        - "public"
      properties:
        "content":
          type: "string"
        "public":
          type: "boolean"
        "title":
          type: "string"
    "CreateAutomationRuleRequest":
      type: "object"
      required:
        - "name"
        - "description"
        - "enabled"
        - "trigger"
        - "conditions"
        - "actions"
      properties:
        "actions":
          type: "array"
          items: {"$ref": "#/components/schemas/AutomationAction"}
        "conditions": {"$ref": "#/components/schemas/AutomationConditions"}
        "description":
          type: "string"
          maxLength: 500
        "enabled":
          type: "boolean"
        "name":
          type: "string"
        "trigger":
          type: "string"
    "CreateEventRequest":
      type: "object"
      required:
        - "event_type"
      properties:
        "event_type":
          type: "string"
        "metadata": {}
        "ticket_id":
          type:
            - "string"
            - "null"
          format: "uuid"
        "user_id":
          type:
            - "string"
            - "null"
          format: "uuid"
    "CreateMacroRequest":
      type: "object"
      required:
        - "name"
        - "description"
        - "content"
      properties:
        "content":
          type: "string"
        "description":
          type: "string"
        "name":
          type: "string"
    "CreateMessageRequest":
      type: "object"
      required:
        - "content"
        - "channel"
      properties:
        "attachments": {}
        "channel":
          type: "string"
        "content":
          type: "string"
    "CreateOrganizationRequest":
      type: "object"
      required:
        - "name"
        - "domain"
      properties:
        "domain":
          type: "string"
        "name":
          type: "string"
    "CreateTagRequest":
      type: "object"
      required:
        - "name"
        - "color"
      properties:
        "color":
          type: "string"
        "name":
          type: "string"
    "CreateTicketRequest":
      type: "object"
      required:
        - "subject"
        - "description"
        - "priority"
      properties:
        "assigned_to":
          type:
            - "string"
            - "null"
          format: "uuid"
        "description":
          type: "string"
        "priority":
          type: "string"
        "subject":
          type: "string"
        "tag_ids":
          type:
            - "array"
            - "null"
          items:
            type: "string"
            format: "uuid"
    "CreateWebhookRequest":
      type: "object"
      required:
        - "name"
        - "url"
        - "events"
        - "enabled"
      properties:
        "description":
          type:
            - "string"
            - "null"
          example: "https://api.example.com/webhooks/blackbox"
        "enabled":
          type: "boolean"
        "events":
          type: "array"
          items:
            type: "string"
        "headers":
          type:
            - "object"
            - "null"
          additionalProperties:
            type: "string"
          propertyNames:
            type: "string"
        "name":
          type: "string"
        "secret":
          type:
            - "string"
            - "null"
        "url":
          type: "string"
    "DailyCount":
      type: "object"
      required:
        - "date"
        - "count"
      properties:
        "count":
          type: "integer"
          format: "int64"
          minimum: 0
        "date":
          type: "string"
    "Enable2FARequest":
      type: "object"
      required:
        - "totp_code"
      properties:
        "totp_code":
          type: "string"
    "EventLogListFilter":
      type: "object"
      properties:
        "event_type":
          type:
            - "string"
            - "null"
        "from_date":
          type:
            - "string"
            - "null"
        "page":
          type:
            - "integer"
            - "null"
          format: "int64"
          minimum: 0
        "per_page":
          type:
            - "integer"
            - "null"
          format: "int64"
          minimum: 0
        "ticket_id":
          type:
            - "string"
            - "null"
          format: "uuid"
        "to_date":
          type:
            - "string"
            - "null"
        "user_id":
          type:
            - "string"
            - "null"
          format: "uuid"
    "EventLogResponse":
      type: "object"
      required:
        - "id"
        - "organization_id"
        - "event_type"
        - "metadata"
        - "created_at"
      properties:
        "created_at":
          type: "string"
        "event_type":
          type: "string"
        "id":
          type: "string"
          format: "uuid"
        "metadata": {}
        "organization_id":
          type: "string"
          format: "uuid"
        "ticket_id":
          type:
            - "string"
            - "null"
          format: "uuid"
        "ticket_subject":
          type:
            - "string"
            - "null"
        "user_id":
          type:
            - "string"
            - "null"
          format: "uuid"
        "user_name":
          type:
            - "string"
            - "null"
    "EventLogStats":
      type: "object"
      required:
        - "total_events"
        - "events_today"
        - "events_this_week"
        - "events_this_month"
        - "top_event_types"
        - "most_active_users"
      properties:
        "events_this_month":
          type: "integer"
          format: "int64"
          minimum: 0
        "events_this_week":
          type: "integer"
          format: "int64"
          minimum: 0
        "events_today":
          type: "integer"
          format: "int64"
          minimum: 0
        "most_active_users":
          type: "array"
          items: {"$ref": "#/components/schemas/UserEventCount"}
        "top_event_types":
          type: "array"
          items: {"$ref": "#/components/schemas/EventTypeCount"}
        "total_events":
          type: "integer"
          format: "int64"
          minimum: 0
    "EventTypeCount":
      type: "object"
      required:
        - "event_type"
        - "count"
      properties:
        "count":
          type: "integer"
          format: "int64"
          minimum: 0
        "event_type":
          type: "string"
    "EventTypeDelivery":
      type: "object"
      required:
        - "event_type"
        - "delivery_count"
        - "success_rate"
      properties:
        "delivery_count":
          type: "integer"
          format: "int64"
          minimum: 0
        "event_type":
          type: "string"
        "success_rate":
          type: "number"
          format: "double"
    "InviteUserRequest":
      type: "object"
      required:
        - "email"
        - "role"
      properties:
        "email":
          type: "string"
        "role":
          type: "string"
    "IssueCategory":
      type: "object"
      required:
        - "category"
        - "count"
        - "average_score"
      properties:
        "average_score":
          type: "number"
          format: "double"
        "category":
          type: "string"
        "count":
          type: "integer"
          format: "int64"
          minimum: 0
    "JoinOrganizationRequest":
      type: "object"
      required:
        - "org_id"
      properties:
        "org_id":
          type: "string"
          format: "uuid"
    "KnowledgeBaseStats":
      type: "object"
      required:
        - "total_articles"
        - "public_articles"
        - "articles_created_this_month"
        - "most_viewed_articles"
      properties:
        "articles_created_this_month":
          type: "integer"
          format: "int64"
          minimum: 0
        "most_viewed_articles":
          type: "array"
          items: {"$ref": "#/components/schemas/ArticleView"}
        "public_articles":
          type: "integer"
          format: "int64"
          minimum: 0
        "total_articles":
          type: "integer"
          format: "int64"
          minimum: 0
    "LoginAttemptResponse":
      type: "object"
      required:
        - "id"
        - "success"
        - "ip_address"
        - "user_agent"
        - "attempted_at"
      properties:
        "attempted_at":
          type: "string"
        "id":
          type: "string"
          format: "uuid"
        "ip_address":
          type: "string"
        "success":
          type: "boolean"
        "user_agent":
          type: "string"
    "LoginHistoryResponse":
      type: "object"
      required:
        - "id"
        - "ip_address"
        - "user_agent"
        - "logged_in_at"
      properties:
        "id":
          type: "string"
          format: "uuid"
        "ip_address":
          type: "string"
        "logged_in_at":
          type: "string"
        "user_agent":
          type: "string"
    "LoginRequest":
      type: "object"
      required:
        - "email"
        - "password"
      properties:
        "email":
          type: "string"
        "org_domain":
          type:
            - "string"
            - "null"
        "password":
          type: "string"
        "totp_code":
          type:
            - "string"
            - "null"
    "MacroListFilter":
      type: "object"
      properties:
        "created_by":
          type:
            - "string"
            - "null"
          format: "uuid"
        "page":
          type:
            - "integer"
            - "null"
          format: "int64"
          minimum: 0
        "per_page":
          type:
            - "integer"
            - "null"
          format: "int64"
          minimum: 0
        "search":
          type:
            - "string"
            - "null"
    "MacroResponse":
      type: "object"
      required:
        - "id"
        - "organization_id"
        - "name"
        - "description"
        - "content"
        - "created_by"
        - "created_by_name"
        - "created_at"
        - "updated_at"
      properties:
        "content":
          type: "string"
        "created_at":
          type: "string"
        "created_by":
          type: "string"
          format: "uuid"
        "created_by_name":
          type: "string"
        "description":
          type: "string"
        "id":
          type: "string"
          format: "uuid"
        "name":
          type: "string"
        "organization_id":
          type: "string"
          format: "uuid"
        "updated_at":
          type: "string"
    "MacroTemplateRequest":
      type: "object"
      required:
        - "macro_id"
        - "variables"
      properties:
        "macro_id":
          type: "string"
          format: "uuid"
        "variables":
          type: "object"
          additionalProperties:
            type: "string"
          propertyNames:
            type: "string"
    "MacroTemplateResponse":
      type: "object"
      required:
        - "macro_id"
        - "macro_name"
        - "rendered_content"
        - "variables_used"
      properties:
        "macro_id":
          type: "string"
          format: "uuid"
        "macro_name":
          type: "string"
        "rendered_content":
          type: "string"
        "variables_used":
          type: "array"
          items:
            type: "string"
    "MacroUsage":
      type: "object"
      required:
        - "macro_id"
        - "name"
        - "usage_count"
      properties:
        "macro_id":
          type: "string"
          format: "uuid"
        "name":
          type: "string"
        "usage_count":
          type: "integer"
          format: "int64"
          minimum: 0
    "MacroUsageStats":
      type: "object"
      required:
        - "total_macros"
        - "macros_used_today"
        - "macros_used_this_month"
        - "most_used_macros"
      properties:
        "macros_used_this_month":
          type: "integer"
          format: "int64"
          minimum: 0
        "macros_used_today":
          type: "integer"
          format: "int64"
          minimum: 0
        "most_used_macros":
          type: "array"
          items: {"$ref": "#/components/schemas/MacroUsage"}
        "total_macros":
          type: "integer"
          format: "int64"
          minimum: 0
    "MembershipResponse":
      type: "object"
      required:
        - "id"
        - "user_id"
        - "user_name"
        - "user_email"
        - "role"
        - "status"
        - "created_at"
      properties:
        "created_at":
          type: "string"
        "id":
          type: "string"
          format: "uuid"
        "invited_by":
          type:
            - "string"
            - "null"
          format: "uuid"
        "role":
          type: "string"
        "status":
          type: "string"
        "user_email":
          type: "string"
        "user_id":
          type: "string"
          format: "uuid"
        "user_name":
          type: "string"
    "MessageListFilter":
      type: "object"
      properties:
        "channel":
          type:
            - "string"
            - "null"
        "page":
          type:
            - "integer"
            - "null"
          format: "int64"
          minimum: 0
        "per_page":
          type:
            - "integer"
            - "null"
          format: "int64"
          minimum: 0
        "sender_id":
          type:
            - "string"
            - "null"
          format: "uuid"
    "MessageResponse":
      type: "object"
      required:
        - "id"
        - "ticket_id"
        - "sender_id"
        - "sender_name"
        - "content"
        - "channel"
        - "sent_at"
      properties:
        "attachments": {}
        "channel":
          type: "string"
        "content":
          type: "string"
        "id":
          type: "string"
          format: "uuid"
        "sender_id":
          type: "string"
          format: "uuid"
        "sender_name":
          type: "string"
        "sent_at":
          type: "string"
        "ticket_id":
          type: "string"
          format: "uuid"
    "MonthlySurveyData":
      type: "object"
      required:
        - "month"
        - "total_surveys"
        - "average_score"
        - "satisfaction_rate"
      properties:
        "average_score":
          type: "number"
          format: "double"
        "month":
          type: "string"
        "satisfaction_rate":
          type: "number"
          format: "double"
        "total_surveys":
          type: "integer"
          format: "int64"
          minimum: 0
    "OrganizationAnalytics":
      type: "object"
      required:
        - "ticket_analytics"
        - "agent_analytics"
        - "system_usage"
        - "knowledge_base_stats"
        - "macro_usage_stats"
      properties:
        "agent_analytics": {"$ref": "#/components/schemas/AgentAnalytics"}
        "knowledge_base_stats": {"$ref": "#/components/schemas/KnowledgeBaseStats"}
        "macro_usage_stats": {"$ref": "#/components/schemas/MacroUsageStats"}
        "system_usage": {"$ref": "#/components/schemas/SystemUsage"}
        "ticket_analytics": {"$ref": "#/components/schemas/TicketAnalytics"}
    "OrganizationByDomainResponse":
      type: "object"
      required:
        - "id"
        - "name"
        - "domain"
        - "allow_domain_join"
        - "created_at"
      properties:
        "allow_domain_join":
          type: "boolean"
        "created_at":
          type: "string"
        "domain":
          type: "string"
        "id":
          type: "string"
          format: "uuid"
        "name":
          type: "string"
    "OrganizationDetail":
      type: "object"
      required:
        - "id"
        - "name"
        - "domain"
        - "role"
      properties:
        "domain":
          type: "string"
        "id":
          type: "string"
          format: "uuid"
        "name":
          type: "string"
        "role":
          type: "string"
    "OrganizationResponse":
      type: "object"
      required:
        - "id"
        - "name"
        - "domain"
        - "created_at"
      properties:
        "created_at":
          type: "string"
        "domain":
          type: "string"
        "id":
          type: "string"
          format: "uuid"
        "name":
          type: "string"
    "OrganizationSettingResponse":
      type: "object"
      required:
        - "id"
        - "key"
        - "value"
        - "created_at"
        - "updated_at"
      properties:
        "created_at":
          type: "string"
        "id":
          type: "string"
          format: "uuid"
        "key":
          type: "string"
        "updated_at":
          type: "string"
        "value": {}
    "PasswordResetRequest":
      type: "object"
      required:
        - "email"
      properties:
        "email":
          type: "string"
    "PriorityCount":
      type: "object"
      required:
        - "priority"
        - "count"
        - "percentage"
      properties:
        "count":
          type: "integer"
          format: "int64"
          minimum: 0
        "percentage":
          type: "number"
          format: "double"
        "priority":
          type: "string"
    "RegisterRequest":
      type: "object"
      required:
        - "email"
        - "name"
        - "password"
      properties:
        "email":
          type: "string"
        "name":
          type: "string"
        "password":
          type: "string"
    "RegisterResponse":
      type: "object"
      required:
        - "user_id"
        - "session_token"
        - "email_verified"
        - "two_fa_enabled"
      properties:
        "email_verified":
          type: "boolean"
        "session_token":
          type: "string"
        "two_fa_enabled":
          type: "boolean"
        "user_id":
          type: "string"
          format: "uuid"
    "ResendVerificationRequest":
      type: "object"
      required:
        - "email"
      properties:
        "email":
          type: "string"
    "ResetPasswordRequest":
      type: "object"
      required:
        - "token"
        - "new_password"
      properties:
        "new_password":
          type: "string"
        "token":
          type: "string"
    "RuleActivity":
      type: "object"
      required:
        - "rule_id"
        - "rule_name"
        - "execution_count"
        - "success_rate"
      properties:
        "execution_count":
          type: "integer"
          format: "int64"
          minimum: 0
        "rule_id":
          type: "string"
          format: "uuid"
        "rule_name":
          type: "string"
        "success_rate":
          type: "number"
          format: "double"
    "ScoreCount":
      type: "object"
      required:
        - "score"
        - "count"
        - "percentage"
      properties:
        "count":
          type: "integer"
          format: "int64"
          minimum: 0
        "percentage":
          type: "number"
          format: "double"
        "score":
          type: "integer"
          format: "int32"
    "SetOrganizationSettingRequest":
      type: "object"
      required:
        - "key"
        - "value"
      properties:
        "key":
          type: "string"
        "value": {}
    "Setup2FAResponse":
      type: "object"
      required:
        - "secret"
        - "qr_code_url"
        - "qr_code_svg"
        - "backup_codes"
      properties:
        "backup_codes":
          type: "array"
          items:
            type: "string"
        "qr_code_svg":
          type: "string"
        "qr_code_url":
          type: "string"
        "secret":
          type: "string"
    "StatusCount":
      type: "object"
      required:
        - "status"
        - "count"
        - "percentage"
      properties:
        "count":
          type: "integer"
          format: "int64"
          minimum: 0
        "percentage":
          type: "number"
          format: "double"
        "status":
          type: "string"
    "SubmitSurveyRequest":
      type: "object"
      required:
        - "ticket_id"
        - "score"
      properties:
        "comment":
          type:
            - "string"
            - "null"
          maxLength: 1000
        "score":
          type: "integer"
          format: "int32"
          maximum: 5
          minimum: 1
        "ticket_id":
          type: "string"
          format: "uuid"
    "SurveyExport":
      type: "object"
      required:
        - "surveys"
        - "analytics"
        - "export_date"
      properties:
        "analytics": {"$ref": "#/components/schemas/CSATAnalytics"}
        "export_date":
          type: "string"
        "surveys":
          type: "array"
          items: {"$ref": "#/components/schemas/SurveyResponse"}
    "SurveyListFilter":
      type: "object"
      properties:
        "from_date":
          type:
            - "string"
            - "null"
        "has_comment":
          type:
            - "boolean"
            - "null"
        "max_score":
          type:
            - "integer"
            - "null"
          format: "int32"
        "min_score":
          type:
            - "integer"
            - "null"
          format: "int32"
        "page":
          type:
            - "integer"
            - "null"
          format: "int64"
          minimum: 0
        "per_page":
          type:
            - "integer"
            - "null"
          format: "int64"
          minimum: 0
        "ticket_id":
          type:
            - "string"
            - "null"
          format: "uuid"
        "to_date":
          type:
            - "string"
            - "null"
        "user_id":
          type:
            - "string"
            - "null"
          format: "uuid"
    "SurveyResponse":
      type: "object"
      required:
        - "id"
        - "organization_id"
        - "ticket_id"
        - "user_id"
        - "user_name"
        - "score"
        - "created_at"
      properties:
        "comment":
          type:
            - "string"
            - "null"
        "created_at":
          type: "string"
        "id":
          type: "string"
          format: "uuid"
        "organization_id":
          type: "string"
          format: "uuid"
        "score":
          type: "integer"
          format: "int32"
        "ticket_id":
          type: "string"
          format: "uuid"
        "ticket_subject":
          type:
            - "string"
            - "null"
        "user_id":
          type: "string"
          format: "uuid"
        "user_name":
          type: "string"
    "SystemUsage":
      type: "object"
      required:
        - "total_events_today"
        - "total_events_this_week"
        - "total_events_this_month"
        - "peak_hour"
        - "peak_day_of_week"
        - "api_calls_today"
        - "active_sessions"
      properties:
        "active_sessions":
          type: "integer"
          format: "int64"
          minimum: 0
        "api_calls_today":
          type: "integer"
          format: "int64"
          minimum: 0
        "peak_day_of_week":
          type: "string"
        "peak_hour":
          type: "integer"
          format: "int32"
          minimum: 0
        "total_events_this_month":
          type: "integer"
          format: "int64"
          minimum: 0
        "total_events_this_week":
          type: "integer"
          format: "int64"
          minimum: 0
        "total_events_today":
          type: "integer"
          format: "int64"
          minimum: 0
    "TagManagementRequest":
      type: "object"
      required:
        - "tag_ids"
      properties:
        "tag_ids":
          type: "array"
          items:
            type: "string"
            format: "uuid"
    "TagResponse":
      type: "object"
      required:
        - "id"
        - "name"
        - "color"
        - "ticket_count"
      properties:
        "color":
          type: "string"
        "id":
          type: "string"
          format: "uuid"
        "name":
          type: "string"
        "ticket_count":
          type: "integer"
          format: "int64"
          minimum: 0
    "TagTicketResponse":
      type: "object"
      required:
        - "id"
        - "subject"
        - "status"
        - "priority"
        - "created_at"
      properties:
        "created_at":
          type: "string"
        "id":
          type: "string"
          format: "uuid"
        "priority":
          type: "string"
        "status":
          type: "string"
        "subject":
          type: "string"
    "TagWithTicketsResponse":
      type: "object"
      required:
        - "id"
        - "name"
        - "color"
        - "tickets"
      properties:
        "color":
          type: "string"
        "id":
          type: "string"
          format: "uuid"
        "name":
          type: "string"
        "tickets":
          type: "array"
          items: {"$ref": "#/components/schemas/TagTicketResponse"}
    "TestWebhookRequest":
      type: "object"
      required:
        - "event_type"
      properties:
        "event_type":
          type: "string"
        "test_data": {}
    "TicketAnalytics":
      type: "object"
      required:
        - "total_tickets"
        - "open_tickets"
        - "in_progress_tickets"
        - "resolved_tickets"
        - "closed_tickets"
        - "tickets_created_today"
        - "tickets_created_this_week"
        - "tickets_created_this_month"
        - "status_distribution"
        - "priority_distribution"
        - "daily_ticket_trends"
      properties:
        "average_first_response_time_hours":
          type:
            - "number"
            - "null"
          format: "double"
        "average_resolution_time_hours":
          type:
            - "number"
            - "null"
          format: "double"
        "closed_tickets":
          type: "integer"
          format: "int64"
          minimum: 0
        "daily_ticket_trends":
          type: "array"
          items: {"$ref": "#/components/schemas/DailyCount"}
        "in_progress_tickets":
          type: "integer"
          format: "int64"
          minimum: 0
        "open_tickets":
          type: "integer"
          format: "int64"
          minimum: 0
        "priority_distribution":
          type: "array"
          items: {"$ref": "#/components/schemas/PriorityCount"}
        "resolved_tickets":
          type: "integer"
          format: "int64"
          minimum: 0
        "status_distribution":
          type: "array"
          items: {"$ref": "#/components/schemas/StatusCount"}
        "tickets_created_this_month":
          type: "integer"
          format: "int64"
          minimum: 0
        "tickets_created_this_week":
          type: "integer"
          format: "int64"
          minimum: 0
        "tickets_created_today":
          type: "integer"
          format: "int64"
          minimum: 0
        "total_tickets":
          type: "integer"
          format: "int64"
          minimum: 0
    "TicketListFilter":
      type: "object"
      properties:
        "assigned_to":
          type:
            - "string"
            - "null"
          format: "uuid"
        "created_by":
          type:
            - "string"
            - "null"
          format: "uuid"
        "page":
          type:
            - "integer"
            - "null"
          format: "int64"
          minimum: 0
        "per_page":
          type:
            - "integer"
            - "null"
          format: "int64"
          minimum: 0
        "priority":
          type:
            - "string"
            - "null"
        "status":
          type:
            - "string"
            - "null"
        "tag_ids":
          type:
            - "array"
            - "null"
          items:
            type: "string"
            format: "uuid"
    "TicketResponse":
      type: "object"
      required:
        - "id"
        - "subject"
        - "description"
        - "status"
        - "priority"
        - "created_by"
        - "created_by_name"
        - "created_at"
        - "updated_at"
        - "tags"
      properties:
        "assigned_to":
          type:
            - "string"
            - "null"
          format: "uuid"
        "assigned_to_name":
          type:
            - "string"
            - "null"
        "created_at":
          type: "string"
        "created_by":
          type: "string"
          format: "uuid"
        "created_by_name":
          type: "string"
        "description":
          type: "string"
        "id":
          type: "string"
          format: "uuid"
        "priority":
          type: "string"
        "status":
          type: "string"
        "subject":
          type: "string"
        "tags":
          type: "array"
          items: {"$ref": "#/components/schemas/TicketTagResponse"}
        "updated_at":
          type: "string"
    "TicketTagResponse":
      type: "object"
      required:
        - "id"
        - "name"
        - "color"
      properties:
        "color":
          type: "string"
        "id":
          type: "string"
          format: "uuid"
        "name":
          type: "string"
    "TimeSeriesData":
      type: "object"
      required:
        - "labels"
        - "datasets"
      properties:
        "datasets":
          type: "array"
          items: {"$ref": "#/components/schemas/TimeSeriesDataset"}
        "labels":
          type: "array"
          items:
            type: "string"
    "TimeSeriesDataset":
      type: "object"
      required:
        - "label"
        - "data"
        - "color"
      properties:
        "color":
          type: "string"
        "data":
          type: "array"
          items:
            type: "integer"
            format: "int64"
            minimum: 0
        "label":
          type: "string"
    "TriggerCount":
      type: "object"
      required:
        - "trigger"
        - "count"
      properties:
        "count":
          type: "integer"
          format: "int64"
          minimum: 0
        "trigger":
          type: "string"
    "UpdateArticleRequest":
      type: "object"
      properties:
        "content":
          type:
            - "string"
            - "null"
        "public":
          type:
            - "boolean"
            - "null"
        "title":
          type:
            - "string"
            - "null"
    "UpdateAutomationRuleRequest":
      type: "object"
      properties:
        "actions":
          type:
            - "array"
            - "null"
          items: {"$ref": "#/components/schemas/AutomationAction"}
        "conditions":
          oneOf:
            - type: "null"
            - {"$ref": "#/components/schemas/AutomationConditions"}
        "description":
          type:
            - "string"
            - "null"
          maxLength: 500
        "enabled":
          type:
            - "boolean"
            - "null"
        "name":
          type:
            - "string"
            - "null"
        "trigger":
          type:
            - "string"
            - "null"
    "UpdateMacroRequest":
      type: "object"
      properties:
        "content":
          type:
            - "string"
            - "null"
        "description":
          type:
            - "string"
            - "null"
        "name":
          type:
            - "string"
            - "null"
    "UpdateMembershipRequest":
      type: "object"
      required:
        - "role"
        - "status"
      properties:
        "role":
          type: "string"
        "status":
          type: "string"
    "UpdateProfileRequest":
      type: "object"
      properties:
        "email":
          type:
            - "string"
            - "null"
        "name":
          type:
            - "string"
            - "null"
    "UpdateSurveyRequest":
      type: "object"
      properties:
        "comment":
          type:
            - "string"
            - "null"
          maxLength: 1000
        "score":
          type:
            - "integer"
            - "null"
          format: "int32"
          maximum: 5
          minimum: 1
    "UpdateTagRequest":
      type: "object"
      properties:
        "color":
          type:
            - "string"
            - "null"
        "name":
          type:
            - "string"
            - "null"
    "UpdateTicketRequest":
      type: "object"
      properties:
        "assigned_to":
          type:
            - "string"
            - "null"
          format: "uuid"
        "description":
          type:
            - "string"
            - "null"
        "priority":
          type:
            - "string"
            - "null"
        "status":
          type:
            - "string"
            - "null"
        "subject":
          type:
            - "string"
            - "null"
    "UpdateWebhookRequest":
      type: "object"
      properties:
        "description":
          type:
            - "string"
            - "null"
        "enabled":
          type:
            - "boolean"
            - "null"
        "events":
          type:
            - "array"
            - "null"
          items:
            type: "string"
        "headers":
          type:
            - "object"
            - "null"
          additionalProperties:
            type: "string"
          propertyNames:
            type: "string"
        "name":
          type:
            - "string"
            - "null"
        "secret":
          type:
            - "string"
            - "null"
        "url":
          type:
            - "string"
            - "null"
    "UploadResponse":
      type: "object"
      required:
        - "attachments"
        - "message"
      properties:
        "attachments":
          type: "array"
          items: {"$ref": "#/components/schemas/AttachmentResponse"}
        "message":
          type: "string"
    "UserEventCount":
      type: "object"
      required:
        - "user_id"
        - "user_name"
        - "count"
      properties:
        "count":
          type: "integer"
          format: "int64"
          minimum: 0
        "user_id":
          type: "string"
          format: "uuid"
        "user_name":
          type: "string"
    "UserOrgInfo":
      type: "object"
      required:
        - "id"
        - "name"
        - "domain"
        - "role"
      properties:
        "domain":
          type: "string"
        "id":
          type: "string"
          format: "uuid"
        "name":
          type: "string"
        "role":
          type: "string"
    "UserOrgMembership":
      type: "object"
      required:
        - "organization_id"
        - "organization_name"
        - "organization_domain"
        - "role"
        - "status"
        - "joined_at"
      properties:
        "joined_at":
          type: "string"
        "organization_domain":
          type: "string"
        "organization_id":
          type: "string"
          format: "uuid"
        "organization_name":
          type: "string"
        "role":
          type: "string"
        "status":
          type: "string"
    "UserProfileResponse":
      type: "object"
      required:
        - "id"
        - "email"
        - "name"
        - "email_verified"
        - "two_fa_enabled"
        - "created_at"
        - "organizations"
      properties:
        "created_at":
          type: "string"
        "email":
          type: "string"
        "email_verified":
          type: "boolean"
        "id":
          type: "string"
          format: "uuid"
        "name":
          type: "string"
        "organizations":
          type: "array"
          items: {"$ref": "#/components/schemas/UserOrgMembership"}
        "two_fa_enabled":
          type: "boolean"
    "VerifyEmailRequest":
      type: "object"
      required:
        - "token"
      properties:
        "token":
          type: "string"
    "WebhookActivity":
      type: "object"
      required:
        - "webhook_id"
        - "webhook_name"
        - "delivery_count"
        - "success_rate"
      properties:
        "delivery_count":
          type: "integer"
          format: "int64"
          minimum: 0
        "success_rate":
          type: "number"
          format: "double"
        "webhook_id":
          type: "string"
          format: "uuid"
        "webhook_name":
          type: "string"
    "WebhookDelivery":
      type: "object"
      required:
        - "id"
        - "webhook_id"
        - "webhook_name"
        - "event_type"
        - "payload"
        - "url"
        - "status"
        - "attempt_count"
        - "created_at"
      properties:
        "attempt_count":
          type: "integer"
          format: "int32"
          minimum: 0
        "created_at":
          type: "string"
        "delivered_at":
          type:
            - "string"
            - "null"
        "error_message":
          type:
            - "string"
            - "null"
        "event_type":
          type: "string"
        "id":
          type: "string"
          format: "uuid"
        "next_retry":
          type:
            - "string"
            - "null"
        "payload": {}
        "response_body":
          type:
            - "string"
            - "null"
        "response_code":
          type:
            - "integer"
            - "null"
          format: "int32"
          minimum: 0
        "status":
          type: "string"
        "url":
          type: "string"
        "webhook_id":
          type: "string"
          format: "uuid"
        "webhook_name":
          type: "string"
    "WebhookListFilter":
      type: "object"
      properties:
        "enabled":
          type:
            - "boolean"
            - "null"
        "event_type":
          type:
            - "string"
            - "null"
        "name_search":
          type:
            - "string"
            - "null"
        "page":
          type:
            - "integer"
            - "null"
          format: "int64"
          minimum: 0
        "per_page":
          type:
            - "integer"
            - "null"
          format: "int64"
          minimum: 0
        "url_search":
          type:
            - "string"
            - "null"
    "WebhookResponse":
      type: "object"
      required:
        - "id"
        - "organization_id"
        - "name"
        - "url"
        - "events"
        - "enabled"
        - "created_at"
        - "updated_at"
        - "success_count"
        - "failure_count"
      properties:
        "created_at":
          type: "string"
        "description":
          type:
            - "string"
            - "null"
        "enabled":
          type: "boolean"
        "events":
          type: "array"
          items:
            type: "string"
        "failure_count":
          type: "integer"
          format: "int64"
          minimum: 0
        "headers":
          type:
            - "object"
            - "null"
          additionalProperties:
            type: "string"
          propertyNames:
            type: "string"
        "id":
          type: "string"
          format: "uuid"
        "last_delivery":
          type:
            - "string"
            - "null"
        "name":
          type: "string"
        "organization_id":
          type: "string"
          format: "uuid"
        "success_count":
          type: "integer"
          format: "int64"
          minimum: 0
        "updated_at":
          type: "string"
        "url":
          type: "string"
    "WebhookStats":
      type: "object"
      required:
        - "total_webhooks"
        - "enabled_webhooks"
        - "deliveries_today"
        - "deliveries_this_week"
        - "success_rate"
        - "most_active_webhooks"
        - "event_distribution"
        - "recent_failures"
      properties:
        "average_response_time":
          type:
            - "number"
            - "null"
          format: "double"
        "deliveries_this_week":
          type: "integer"
          format: "int64"
          minimum: 0
        "deliveries_today":
          type: "integer"
          format: "int64"
          minimum: 0
        "enabled_webhooks":
          type: "integer"
          format: "int64"
          minimum: 0
        "event_distribution":
          type: "array"
          items: {"$ref": "#/components/schemas/EventTypeDelivery"}
        "most_active_webhooks":
          type: "array"
          items: {"$ref": "#/components/schemas/WebhookActivity"}
        "recent_failures":
          type: "array"
          items: {"$ref": "#/components/schemas/WebhookDelivery"}
        "success_rate":
          type: "number"
          format: "double"
        "total_webhooks":
          type: "integer"
          format: "int64"
          minimum: 0
    "WebhookTestResult":
      type: "object"
      required:
        - "webhook_id"
        - "success"
        - "response_time_ms"
      properties:
        "error_message":
          type:
            - "string"
            - "null"
        "response_code":
          type:
            - "integer"
            - "null"
          format: "int32"
          minimum: 0
        "response_time_ms":
          type: "integer"
          format: "int64"
          minimum: 0
        "success":
          type: "boolean"
        "webhook_id":
          type: "string"
          format: "uuid"
  securitySchemes:
    "blackbox_auth_token":
      type: "apiKey"
      in: "cookie"
      name: "blackbox_auth_token"
tags:
  - name: "Authentication"
    description: "User authentication, registration, password management, and multi-factor authentication"
  - name: "Organizations"
    description: "Multi-tenant organization management, member invitations, and settings"
  - name: "Users"
    description: "User profile management, login history, and account settings"
  - name: "API Keys"
    description: "Secure API key generation, management, and programmatic access control"
  - name: "Attachments"
    description: "File upload, download, and management for ticket communications"
  - name: "Macros"
    description: "Reusable response templates, quick actions, and productivity tools"
  - name: "Event Logs"
    description: "Comprehensive audit trail, system events, and compliance logging"
  - name: "Analytics"
    description: "Real-time metrics, performance insights, and business intelligence"
  - name: "CSAT Surveys"
    description: "Customer satisfaction tracking, feedback collection, and satisfaction analytics"
  - name: "Automation"
    description: "Intelligent workflow automation with triggers, conditions, and actions"
  - name: "Webhooks"
    description: "Real-time event notifications, external integrations, and webhook management"
  - name: "Tickets"
    description: "Core ticket lifecycle management, assignment, and status tracking"
  - name: "Knowledge Base"
    description: "Self-service documentation, article management, and help content"
  - name: "Tags"
    description: "Ticket categorization, organization, and metadata management"
  - name: "Messages"
    description: "Ticket communication, threaded conversations, and message history"
